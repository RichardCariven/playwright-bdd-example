openapi: 3.0.1
info:
  title: Open API ListenAPI spec
  description: Open API Spec of Listen API
  version: 1.1.0
servers:
  - url: https://listenapi.planetradio.co.uk/api9.2/
paths:
  /aggregatorbrands:
    get:
      summary: Get a list of all active aggregator brands
      description: Retrieve list of aggregator brands
      operationId: getAggregatorBrands
      parameters:
        - name: _p
          in: query
          description: "Pagination: Page number"
          schema:
            type: number
        - name: _pp
          in: query
          description: "Pagination: Items per page"
          schema:
            type: number
        - name: _o
          in: query
          description:
            Order data by provided parameter. Prefix with an "-" to order
            inversely. Endpoint must support.
          schema:
            type: string
        - name: "_filter[]"
          in: query
          description:
            "Long-form version to filter data. Post-processes data, may conflict\
            \ with request-specific parameters"
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/AggregatorBrandResponse"
  /applist:
    get:
      summary: Get applications object
      description: Return a list of all Applications
      operationId: getApps
      parameters:
        - name: _p
          in: query
          description: "Pagination: Page number"
          schema:
            type: number
        - name: _pp
          in: query
          description: "Pagination: Items per page"
          schema:
            type: number
        - name: _o
          in: query
          description:
            Order data by provided parameter. Prefix with an "-" to order
            inversely. Endpoint must support.
          schema:
            type: string
        - name: "_filter[]"
          in: query
          description:
            "Long-form version to filter data. Post-processes data, may conflict\
            \ with request-specific parameters"
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/AppListResponse"
  /arartist/{absoluteArtistId}:
    get:
      summary: Get artist (Absolute only)
      description: Retrieve Artist Record
      operationId: getAbsoluteArtistById
      parameters:
        - name: absoluteArtistId
          in: path
          description: "Unique identifier for the an Artist, used only by Absolute Radio"
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Artist"
      deprecated: true
  /audibles:
    get:
      summary: |
        Get audibles. (AppCode OR RegionCode OR StationCode OR BrandCode is required)
      description: |
        Retrieve list of audible content (podcasts, box set episodes,
        listen again episodes)
        <hr>
        <strong style="color:red">*One of these parameters is required: `AppCode`, `BrandCode`, `StationCode`, `RegionCode`</strong>
      operationId: getAudibles
      parameters:
        - name: AppCode
          in: query
          description: |
            Filter by App(Code).
            This parameter is incompatible with `BrandCode`, `RegionCode`, and `StationCode` parameters.
          schema:
            type: string
        - name: RegionCode
          in: query
          description: |
            Filter by Region(Code).
            This parameter is incompatible with `BrandCode`, `AppCode`, and `StationCode` parameters.'
          schema:
            type: string
        - name: ForceAppCode
          in: query
          description: |
            Force shuttle links to use this AppCode.
            This parameter is ONLY compatible with `RegionCode` parameters.'
          schema:
            type: string
        - name: BrandCode
          in: query
          description: |
            Filter by Brand(Code).
            This parameter is incompatible with `AppCode`, `RegionCode`, and `StationCode` parameters.'
          schema:
            type: string
        - name: StationCode
          in: query
          description: |
            Filter by Station(Code).
            This parameter is incompatible with `BrandCode`, `AppCode`, and `RegionCode` parameters.'
          schema:
            type: string
        - name: "type[]"
          in: query
          description: Filter by multiple audible types
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
              enum:
                - podcast_episode
                - boxset_episode
                - listenagain
        - name: type
          in: query
          description: Filter by single audible type
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
              enum:
                - podcast_episode
                - boxset_episode
                - listenagain
        - name: latest
          in: query
          description: Group by latest parent (definition of differs by type)
          schema:
            type: boolean
        - name: "podcast_episode.PodcastChannelId[]"
          in: query
          description: Filter response so it will only return podcasts that match `PodcastChannelId`*
          style: form
          explode: true
          schema:
            type: array
            items:
              type: number
        - name: "boxset_episode.BoxSetId[]"
          in: query
          description: Filter response so it will only return boxsets that match `BoxSetId`*
          style: form
          explode: true
          schema:
            type: array
            items:
              type: number
        - name: "listenagain.ShowId[]"
          in: query
          description:
            Filter response so it will only return listen again items that
            match `ShowId`*
          style: form
          explode: true
          schema:
            type: array
            items:
              type: number
        - name: _p
          in: query
          description: "Pagination: Page number"
          schema:
            type: number
        - name: _pp
          in: query
          description: "Pagination: Items per page"
          schema:
            type: number
        - name: _o
          in: query
          description:
            Order data by provided parameter. Prefix with an "-" to order
            inversely. Endpoint must support.
          schema:
            type: string
        - name: "_filter[]"
          in: query
          description:
            "Long-form version to filter data. Post-processes data, may conflict\
            \ with request-specific parameters"
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Audible"
  /boxsetepisodes/{stationCode}:
    get:
      summary: Get set episodes object
      description: Retrieve set episodes (JSON) -- Not on phones
      operationId: getBoxsetEpisodesByStationCode
      parameters:
        - name: stationCode
          in: path
          description: Filter by Station(Code).
          required: true
          schema:
            type: string
        - name: _p
          in: query
          description: "Pagination: Page number"
          schema:
            type: number
        - name: _pp
          in: query
          description: "Pagination: Items per page"
          schema:
            type: number
        - name: _o
          in: query
          description:
            Order data by provided parameter. Prefix with an "-" to order
            inversely. Endpoint must support.
          schema:
            type: string
        - name: "_filter[]"
          in: query
          description:
            "Long-form version to filter data. Post-processes data, may conflict\
            \ with request-specific parameters"
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BoxSetEpisode"
  /boxset/{udid}/{appPlatform}/{stationCode}/{streamQuality}/{streamConnection}/{userId}:
    get:
      summary: Get BoxSet and its episodes
      description: Deprecated? Prefer getShows
      operationId: getBoxset
      parameters:
        - name: appPlatform
          in: path
          description: Used by phone applications to identify their source type
          required: true
          schema:
            pattern: "^\\w{3}\\_\\w+$"
            type: string
        - name: udid
          in: path
          description: Unique identifier for a Device
          required: true
          schema:
            type: string
        - name: stationCode
          in: path
          description: Filter by Station(Code).
          required: true
          schema:
            type: string
        - name: streamQuality
          in: path
          description: Quality of stream. Similar to but not bandwidth
          required: true
          schema:
            type: string
            enum:
              - hq
              - sq
              - wifi
              - cellular
        - name: streamConnection
          in: path
          description:
            Device's connection<hr><small><strong>Format:</strong> llwstring|numeric<br><strong>Example:</strong>
            cellular|10943302
          required: true
          schema:
            type: string
        - name: userId
          in: path
          description: Unique identifier for a ListenAPI Account
          required: true
          schema:
            type: integer
        - name: show_items
          in: query
          description: Return all boxSets associated with a Station inside a child <item>
          schema:
            type: string
      responses:
        "200":
          description: Returns a BoxSet and its episodes
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/BoxSet"
  /brands:
    get:
      summary: Index of brand entities
      operationId: getBrands
      parameters:
        - name: _p
          in: query
          description: "Pagination: Page number"
          schema:
            type: number
        - name: _pp
          in: query
          description: "Pagination: Items per page"
          schema:
            type: number
        - name: _o
          in: query
          description:
            Order data by provided parameter. Prefix with an "-" to order
            inversely. Endpoint must support.
          schema:
            type: string
        - name: "_filter[]"
          in: query
          description:
            "Long-form version to filter data. Post-processes data, may conflict\
            \ with request-specific parameters"
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Brand"
  /brand/{brandCode}:
    get:
      summary: Get brand object
      operationId: getBrandByBrandCode
      parameters:
        - name: brandCode
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Brand"
  /content/{stationCode}:
    get:
      summary: Get station details
      operationId: getArticleByStationCode
      parameters:
        - name: stationCode
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ContentArticle"
  /contentdadi/{dadiId}/{filter}:
    get:
      summary: Get station details for Dadi ID
      operationId: getArticleByDadiIdAndFilter
      parameters:
        - name: dadiId
          in: path
          required: true
          schema:
            type: string
        - name: filter
          in: path
          description: Filter by station region competition category
          required: true
          schema:
            type: string
            default: comps
            enum:
              - comps
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ContentArticle"
  /contentdadi/{dadiId}:
    get:
      summary: Get station details for Dadi ID
      operationId: getArticleByDadiId
      parameters:
        - name: dadiId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ContentArticle"
  /content/{stationCode}/{filter}:
    get:
      summary: Get station details
      operationId: getArticleByStationCodeAndFilter
      parameters:
        - name: stationCode
          in: path
          required: true
          schema:
            type: string
        - name: filter
          in: path
          description: Filter by station region competition category
          required: true
          schema:
            type: string
            default: comps
            enum:
              - comps
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                description: ""
                items:
                  $ref: "#/components/schemas/ContentArticle"
  /devices:
    get:
      summary: DEPRECATED. Get device tokens object
      description: DEPRECATED. Index of device tokens
      operationId: getDevicesTokens
      parameters:
        - name: "applications[]"
          in: query
          description: Filter by Application codes or IDs
          required: true
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: "types[]"
          in: query
          description: Filter based on operating system(s)
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
              enum:
                - ios
                - and
        - name: _aggregate
          in: query
          description:
            Types 'tokens' or 'data' return device token and user id. Type
            'count' retuns quantity of existent tokens.
          schema:
            type: string
            default: tokens
            enum:
              - tokens
              - data
              - count
        - name: "accounts[]"
          in: query
          description: Filter based on account ids
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                description: ""
                items:
                  $ref: "#/components/schemas/Device"
      deprecated: true
  /device/{udid}/{applicationCode}/{token}:
    get:
      summary: DEPRECATED. Get device token object
      description:
        "DEPRECATED. Stores information about pushable device - {token}\
        \ is unique identifier"
      operationId: getDeviceToken
      parameters:
        - name: udid
          in: path
          description: Unique identifier for a Device
          required: true
          schema:
            type: string
        - name: applicationCode
          in: path
          description: Unique identifier for an Application
          required: true
          schema:
            type: string
        - name: token
          in: path
          description:
            <u>Device</u> Token. Used to send push notifications to phones
            (<a href='https://developer.apple.com/library/content/documentation/NetworkingInternet/Conceptual/RemoteNotificationsPG/CommunicatingwithAPNs.html'>more</a>)
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/DeviceToken"
      deprecated: true
  /epgshows/{showId}:
    get:
      summary: |
        Retrieve show information.

        The "showId" is more like "listen again show id", but this endpoint
        will also return non-listen again content too

        Non-listen again: Static content, mostly likely refering to a
        podcast channel without
        an explicit link)
      operationId: getEpgShow
      parameters:
        - name: showId
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: "The requested EPG Show, or a fallback if it does not exist"
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/EpgShow"
  /eventdata/{eventId}:
    get:
      summary: Retrieve raw-ish event record
      description: Retrieve raw-ish event record
      operationId: getEventById
      parameters:
        - name: eventId
          in: path
          description: Filter by Event ID
          required: true
          schema:
            type: string
            format: "^(bonus)?[0-9]+$"
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Event"
  /eventsdadi/{dadiCode}/{date}/{time}/{limit}:
    get:
      summary: Get playlist with a Dadi ID
      description: Retrieve "events" but with a Dadi ID
      operationId: getEventsByDadiId
      parameters:
        - name: dadiCode
          in: path
          description: Unique Station identifier for Publish
          required: true
          schema:
            type: string
        - name: date
          in: path
          required: true
          schema:
            type: string
        - name: time
          in: path
          required: true
          schema:
            type: string
        - name: limit
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/NowPlayingSimple"
  /events/{stationCode}/{time}/{limit}:
    get:
      summary: Get playlist
      description: "Retrieve up to {limit} events up until {time}"
      operationId: getEventsByStationCode
      parameters:
        - name: stationCode
          in: path
          description: Filter by Station(Code).
          required: true
          schema:
            type: string
        - name: time
          in: path
          required: true
          schema:
            type: string
        - name: limit
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/NowPlayingSimple"
  /event/{udid}/{appPlatform}/{stationCode}/{timeCode}/{userId}:
    get:
      summary: Get event object
      description: Retrieve parsed event record (Generally more useful than eventdata)
      operationId: getEvent
      parameters:
        - name: udid
          in: path
          description: Unique identifier for a Device
          required: true
          schema:
            type: string
        - name: appPlatform
          in: path
          description: Used by phone applications to identify their source type
          required: true
          schema:
            pattern: "^\\w{3}\\_\\w+$"
            type: string
        - name: stationCode
          in: path
          description: Filter by Station(Code).
          required: true
          schema:
            type: string
        - name: timeCode
          in: path
          required: true
          schema:
            type: string
        - name: userId
          in: path
          description: Unique identifier for a ListenAPI Account
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/EventsXml"
  /forgetTokens:
    delete:
      summary: DEPRECATED. Delete multiple tokens
      operationId: forgetTokens
      parameters:
        - name: "tokens[]"
          in: query
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: What tokens?
          content: {}
      deprecated: true
  /initdadi/{dadiCode}:
    get:
      summary: '"init" but with Dadi ID'
      description: '"init" but with Dadi ID'
      operationId: initWithDadiId
      parameters:
        - name: dadiCode
          in: path
          description: Unique Station identifier for Publish
          required: true
          schema:
            type: string
        - name: "stationBrandRelated.StationType[]"
          in: query
          description: Filter brand related stations by station type
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
              default: radio
              enum:
                - radio
                - box set
                - television
        - name: "stationRelated.StationType[]"
          in: query
          description: Filter related stations by station type
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
              enum:
                - radio
                - box set
                - television
        - name: test
          in: query
          description:
            Include test stations in the results (when requested work using
            internal IP).
          schema:
            type: string
        - name: X-Forwarded-For
          in: header
          description:
            Required when using test parameter (Is it needed to be a valid
            IP address).
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Station"
  /initweb/{stationCode}:
    get:
      summary: Retrieve a station's (potentially random) HTML Panel
      description: Retrieve a station's (potentially random) HTML Panel
      operationId: initWithStationCode
      parameters:
        - name: stationCode
          in: path
          description: Filter by Station(Code).
          required: true
          schema:
            type: string
        - name: "stationBrandRelated.StationType[]"
          in: query
          description: Filter brand related stations by station type
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
              default: radio
              enum:
                - radio
                - box set
                - television
        - name: "stationRelated.StationType[]"
          in: query
          description: Filter related stations by station type
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
              default: radio
              enum:
                - radio
                - box set
                - television
        - name: test
          in: query
          description:
            Include test stations in the results (when requested work using
            internal IP).
          schema:
            type: string
        - name: X-Forwarded-For
          in: header
          description:
            Required when using test parameter (Is it needed to be a valid
            IP address).
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Station"
  /init/{udid}/{appPlatform}/{location}/{userId}/{advertiserId}/{deeplink}:
    get:
      summary: "Retrieve {station} configuration (Phones)"
      description: "Retrieve {station} configuration (Phones)"
      operationId: initApp
      parameters:
        - name: udid
          in: path
          description: Unique identifier for a Device
          required: true
          schema:
            type: string
        - name: appPlatform
          in: path
          description: Used by phone applications to identify their source type
          required: true
          schema:
            pattern: "^\\w{3}\\_\\w+$"
            type: string
        - name: location
          in: path
          description: Geographical coordinates
          required: true
          schema:
            type: string
        - name: userId
          in: path
          description: Unique identifier for a ListenAPI Account
          required: true
          schema:
            type: integer
        - name: advertiserId
          in: path
          required: true
          schema:
            type: integer
        - name: deeplink
          in: path
          required: true
          schema:
            type: string
        - name: test
          in: query
          description:
            Include test stations in the results (when requested work using
            internal IP).
          schema:
            type: string
        - name: outputStations
          in: query
          description: Output station data in response
          schema:
            type: boolean
            default: true
        - name: X-Forwarded-For
          in: header
          description:
            Required when using test parameter (Is it needed to be a valid
            IP address).
          schema:
            type: string
      responses:
        "200":
          description: Successful
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/Init"
  /instream/{udid}/{appPlatform}/{stationCode}/{userId}/{duration}/{adType}/{metaData}/{bandwidth}:
    get:
      summary: Get full screen streaming ad object
      description: Returns xml document describing a full screen streaming ad
      operationId: getInstream
      parameters:
        - name: udid
          in: path
          description: Unique identifier for a Device
          required: true
          schema:
            type: string
        - name: appPlatform
          in: path
          description: Used by phone applications to identify their source type
          required: true
          schema:
            pattern: "^\\w{3}\\_\\w+$"
            type: string
        - name: stationCode
          in: path
          description: Filter by Station(Code)
          required: true
          schema:
            type: string
        - name: userId
          in: path
          description: Unique identifier for a ListenAPI Account
          required: true
          schema:
            type: integer
        - name: duration
          in: path
          required: true
          schema:
            type: string
        - name: adType
          in: path
          description: Unused
          required: true
          schema:
            type: string
        - name: metaData
          in: path
          description: String added to adswizz URL.
          required: true
          schema:
            type: string
        - name: bandwidth
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Instream"
  /latestEvents:
    get:
      summary: Get the latest 250 events for a Station
      description: Retrieve "events" but with a Dadi ID
      operationId: latestEvents
      parameters:
        - name: DadiCode
          in: query
          description: Unique Station identifier for Publish
          schema:
            type: string
        - name: StationCode
          in: query
          description: Unique Station code
          schema:
            type: string
        - name: StationId
          in: query
          description: Unique Station id
          schema:
            type: string
        - name: from
          in: query
          description: Time offset to retrieve events from (backwards)
          schema:
            type: string
        - name: _o
          in: query
          description: Order events
          schema:
            type: string
            default: desc
            enum:
              - asc
              - desc
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/NowPlayingReduced"
  /listenagaindadi/{dadiCode}:
    get:
      summary: Get listen again episodes
      operationId: getListenAgainByDadiId
      parameters:
        - name: dadiCode
          in: path
          description: Unique Station identifier for Publish
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
                additionalProperties:
                  type: array
                  items:
                    $ref: "#/components/schemas/ListenAgainEpisode"
                description: "`default` is an example key"
  /listenagain/{stationCode}:
    get:
      summary: Get listenagain object
      description: "Retrieve historical play information for {station}"
      operationId: getListenAgainByStationCode
      parameters:
        - name: stationCode
          in: path
          description: Filter by Station(Code).
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
                additionalProperties:
                  type: array
                  items:
                    $ref: "#/components/schemas/ListenAgainEpisode"
  /listen/{udid}/{appPlatform}/{stationCode}/{streamQuality}/{streamConnection}/{userId}/{advertiserId}:
    get:
      summary: Logs a "listen"
      operationId: getListenLogs
      parameters:
        - name: udid
          in: path
          description: Unique identifier for a Device
          required: true
          schema:
            type: string
        - name: appPlatform
          in: path
          description: Used by phone applications to identify their source type
          required: true
          schema:
            pattern: "^\\w{3}\\_\\w+$"
            type: string
        - name: stationCode
          in: path
          description: Filter by Station(Code).
          required: true
          schema:
            type: string
        - name: streamQuality
          in: path
          description: Quality of stream. Similar to but not bandwidth
          required: true
          schema:
            type: string
            enum:
              - hq
              - sq
              - wifi
              - cellular
        - name: streamConnection
          in: path
          description:
            Device's connection<hr><small><strong>Format:</strong> llwstring|numeric<br><strong>Example:</strong>
            cellular|10943302
          required: true
          schema:
            type: string
        - name: userId
          in: path
          description: Unique identifier for a ListenAPI Account
          required: true
          schema:
            type: integer
        - name: advertiserId
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ListenXml"
  /login/{udid}/{appPlatform}/{location}/{email}/{password}/{device}:
    post:
      summary: Get user information
      description:
        "Given valid credentials, will provide user information and hint\
        \ at how long their cookie should last (not authentication!)"
      operationId: login
      parameters:
        - name: udid
          in: path
          description: Unique identifier for a Device
          required: true
          schema:
            type: string
        - name: appPlatform
          in: path
          description: Used by phone applications to identify their source type
          required: true
          schema:
            pattern: "^\\w{3}\\_\\w+$"
            type: string
        - name: location
          in: path
          description: Geographical coordinates
          required: true
          schema:
            type: string
        - name: email
          in: path
          description: Email address of an Account
          required: true
          schema:
            type: string
        - name: password
          in: path
          description: User's password
          required: true
          schema:
            type: string
        - name: device
          in: path
          description: Unused. Potentially the same as Token
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content: {}
  /logout/{udid}/{appPlatform}/{userId}:
    get:
      summary: Logs logging user out
      description:
        "Logs logging user out (does not actually log user out, pretty\
        \ much just logs it)"
      operationId: logout
      parameters:
        - name: udid
          in: path
          description: Unique identifier for a Device
          required: true
          schema:
            type: string
        - name: appPlatform
          in: path
          description: Used by phone applications to identify their source type
          required: true
          schema:
            pattern: "^\\w{3}\\_\\w+$"
            type: string
        - name: userId
          in: path
          description: Unique identifier for a ListenAPI Account
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content: {}
  /log:
    post:
      summary: Register any log
      description:
        Generic incoming logger so external applications can send any log
        they like
      operationId: log
      parameters:
        - name: USER
          in: header
          description: UserId
          schema:
            type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - entity
                - message
                - type
              type: object
              properties:
                type:
                  type: string
                  description: Entity Type
                entity:
                  type: string
                  description: Entity identifier
                message:
                  type: string
                  description: Message
                also:
                  type: string
                  description: Additional Data
        required: true
      responses:
        "200":
          description: OK
          content: {}
  /luckydip/{regionCode}:
    get:
      summary: Returns 4 randomly ordered local stations
      operationId: luckydip
      parameters:
        - name: regionCode
          in: path
          description: ISO-3166-2 Region code
          required: true
          schema:
            type: string
            enum:
              - GB
              - "NO"
              - DK
              - FI
              - SE
              - DE
              - GR
              - CY
              - RO
              - MD
              - PL
              - IE
      responses:
        "200":
          description: OK
          content: {}
  /makeToken/{userId}/{deviceId}:
    get:
      summary: Get JWT token
      description:
        One-time request to obtain JWT token without user credentials (<a
        href="https://bauer-specialist.atlassian.net/wiki/spaces/AUD/pages/773947418">readme</a>)
      operationId: makeToken
      parameters:
        - name: userId
          in: path
          description: Unique identifier for a ListenAPI Account
          required: true
          schema:
            type: integer
        - name: deviceId
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/TokenStatus"
  /localstations/{regionCode}:
    get:
      summary: Get split stations near user
      description: Returns nearby stations split based range of users location
      operationId: getLocalStations
      parameters:
        - name: regionCode
          in: path
          description: Filter by regionCode.
          required: true
          schema:
            type: string
        - name: latitude
          in: query
          description: Current user latitude
          required: true
          schema:
            type: string
        - name: longitude
          in: query
          description: Current user longitude
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                example:
                  - ge1
                  - ha1
                  - lfm
                items:
                  type: object
                  allOf:
                    - $ref: "#/components/schemas/StationCode"
                    - type: string
                      description: List of Stations Code
  /nearbyStations/{stationCode}:
    get:
      summary: Get nearby split stations
      description: Returns nearby stations split based on user location
      operationId: getNearbyStations
      parameters:
        - name: stationCode
          in: path
          description: Filter by Station(Code).
          required: true
          schema:
            type: string
        - name: userIp
          in: query
          description: Current user ip used to specify user location.
          schema:
            type: string
        - name: "coordinates[lat]"
          in: query
          description: "Current user latitude. Mandatory when passing coordinates[lon]."
          schema:
            type: string
        - name: "coordinates[lon]"
          in: query
          description: "Current user longitude. Mandatory when passing coordinates[lat]."
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                example:
                  - hit
                  - hrm
                  - hrl
                items:
                  type: string
                  description: List of Stations Code
  /networks:
    get:
      summary: Get station networks
      description: Return the station networks
      operationId: getNetworks
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Network"
  /nowplaying/{stationCode}/{responseType}:
    get:
      summary: Get nowplaying object
      description: "Return what is currently playing on {station}"
      operationId: getNowPlayingByStationCode
      parameters:
        - name: stationCode
          in: path
          description: Filter by Station(Code).
          required: true
          schema:
            type: string
        - name: responseType
          in: path
          description: Expected response type
          required: true
          schema:
            type: string
            default: json
            enum:
              - json
              - xml
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/NowPlaying"
  /oanowplaying/{stationCode}/{responseType}:
    get:
      summary: Get nowplaying object with small time adjustment so it aligns to realtime
      description: "Return what is currently playing on {station}"
      operationId: getOaNowPlayingByStationCode
      parameters:
        - name: stationCode
          in: path
          description: Filter by Station(Code).
          required: true
          schema:
            type: string
        - name: responseType
          in: path
          description: Expected response type
          required: true
          schema:
            type: string
            default: json
            enum:
              - json
              - xml
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/NowPlaying"
  /playlist:
    get:
      summary:
        "Get playlist information for a show or station. Must provide one of\
        \ ScheduleId, StationCode"
      operationId: getPlaylist
      parameters:
        - name: ScheduleId
          in: query
          description:
            "Query for a specific schedule's playlist. Infers \"StationCode\"\
            , \"from\" and \"to\""
          schema:
            type: number
        - name: StationCode
          in: query
          description: Query for a station's playlist
          schema:
            type: string
        - name: from
          in: query
          description:
            Filter for tracks played at or after this time (Only works with
            StationCode)
          schema:
            type: string
        - name: until
          in: query
          description: Filter for tracks played before this time (Only works with StationCode)
          schema:
            type: string
        - name: _p
          in: query
          description: "Pagination: Page number"
          schema:
            type: number
        - name: _pp
          in: query
          description: "Pagination: Items per page"
          schema:
            type: number
        - name: _o
          in: query
          description:
            Order data by provided parameter. Prefix with an "-" to order
            inversely. Endpoint must support.
          schema:
            type: string
        - name: "_filter[]"
          in: query
          description:
            "Long-form version to filter data. Post-processes data, may conflict\
            \ with request-specific parameters"
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Successfully retrieved playlist
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/NowPlayingSimple"
  /podcastchannelsdadi/{dadiCode}:
    get:
      summary: "Return Podcast Channels that belong to {station}"
      operationId: getPodcastChannelsDadiByDadiId
      parameters:
        - name: dadiCode
          in: path
          description: Unique Station identifier for Publish
          required: true
          schema:
            type: string
        - name: _p
          in: query
          description: "Pagination: Page number"
          schema:
            type: number
        - name: _pp
          in: query
          description: "Pagination: Items per page"
          schema:
            type: number
        - name: _o
          in: query
          description:
            Order data by provided parameter. Prefix with an "-" to order
            inversely. Endpoint must support.
          schema:
            type: string
        - name: "_filter[]"
          in: query
          description:
            "Long-form version to filter data. Post-processes data, may conflict\
            \ with request-specific parameters"
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PodcastChannelRegion"
  /podcastchannelsregion/{regionCode}/featured:
    get:
      summary: Get list of all featured podcasts
      operationId: getFeaturedPodcastsByRegion
      parameters:
        - name: regionCode
          in: path
          description: ISO-3166-2 Region code
          required: true
          schema:
            type: string
            enum:
              - GB
              - "NO"
              - DK
              - FI
              - SE
              - DE
              - GR
              - CY
              - RO
              - MD
              - PL
              - IE
        - name: _p
          in: query
          description: "Pagination: Page number"
          schema:
            type: number
        - name: _pp
          in: query
          description: "Pagination: Items per page"
          schema:
            type: number
        - name: _o
          in: query
          description:
            Order data by provided parameter. Prefix with an "-" to order
            inversely. Endpoint must support.
          schema:
            type: string
        - name: "_filter[]"
          in: query
          description:
            "Long-form version to filter data. Post-processes data, may conflict\
            \ with request-specific parameters"
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                description: Return featured podcast channels by region
                items:
                  $ref: "#/components/schemas/PodcastChannelRegion"
  /podcastchannelsregion/{regionCode}:
    get:
      summary: Get list of all podcasts by region.
      operationId: podcastsByRegionCode
      parameters:
        - name: regionCode
          in: path
          description: ISO-3166-2 Region code
          required: true
          schema:
            type: string
            enum:
              - GB
              - "NO"
              - DK
              - FI
              - SE
              - DE
              - GR
              - CY
              - RO
              - MD
              - PL
              - IE
        - name: "StationId[]"
          in: query
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: "AppId[]"
          in: query
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: _p
          in: query
          description: "Pagination: Page number"
          schema:
            type: number
        - name: _pp
          in: query
          description: "Pagination: Items per page"
          schema:
            type: number
        - name: _o
          in: query
          description:
            Order data by provided parameter. Prefix with an "-" to order
            inversely. Endpoint must support.
          schema:
            type: string
        - name: "_filter[]"
          in: query
          description:
            "Long-form version to filter data. Post-processes data, may conflict\
            \ with request-specific parameters"
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                description: Return podcast channels by region
                items:
                  $ref: "#/components/schemas/PodcastChannelRegion"
  /podcastchannelsstation/{stationCode}:
    get:
      summary: Get podcast channels station object
      description: "Return Podcast Channels that belong to {station}"
      operationId: podcastchannelsstation
      parameters:
        - name: stationCode
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                description: Return podcast channels by station code
                items:
                  $ref: "#/components/schemas/PodcastChannelRegion"
  /podcastsbychannel/{podcastchannel}:
    get:
      summary: Find all podcasts by channel
      operationId: getPodcastsByChannel
      parameters:
        - name: podcastchannel
          in: path
          description: podcastChannel
          required: true
          schema:
            type: string
        - name: "PodcastSeasonNumber[]"
          in: query
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: "PodcastRadioplayId[]"
          in: query
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: _p
          in: query
          description: "Pagination: Page number"
          schema:
            type: number
        - name: _pp
          in: query
          description: "Pagination: Items per page"
          schema:
            type: number
        - name: _o
          in: query
          description:
            Order data by provided parameter. Prefix with an "-" to order
            inversely. Endpoint must support.
          schema:
            type: string
        - name: "_filter[]"
          in: query
          description:
            "Long-form version to filter data. Post-processes data, may conflict\
            \ with request-specific parameters"
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/PodcastChannelEpisodes"
  /podcastsbyid/{podcastChannelId}:
    get:
      summary: Get podcasts object
      description: "Return Podcasts that belong to {podcastChannel}"
      operationId: getPodcastsByChannelId
      parameters:
        - name: podcastChannelId
          in: path
          description: Unique identifier of a Podcast Channel
          required: true
          schema:
            type: integer
        - name: _p
          in: query
          description: "Pagination: Page number"
          schema:
            type: number
        - name: _pp
          in: query
          description: "Pagination: Items per page"
          schema:
            type: number
        - name: _o
          in: query
          description:
            Order data by provided parameter. Prefix with an "-" to order
            inversely. Endpoint must support.
          schema:
            type: string
        - name: "_filter[]"
          in: query
          description:
            "Long-form version to filter data. Post-processes data, may conflict\
            \ with request-specific parameters"
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PodcastEpisode"
  /podcastsbystation/{stationCode}:
    get:
      summary: Get podcasts by station code
      operationId: getPodcastsChannelsByStationCode
      parameters:
        - name: stationCode
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PodcastChannelRegion"
  /podcast/{podcastId}:
    get:
      summary: Get podcast object
      description:
        "Same as `/podcastsbyid/{podcastId}` except the Podcast Channel\
        \ is merged with Podcast"
      operationId: getPodcastById
      parameters:
        - name: podcastId
          in: path
          description: Unique identifier for a Podcast
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/PodcastEpisode"
  /premiumStatusForUser:
    get:
      summary: Return subscription status for a user
      description:
        "Returns premium subscription status for a user, via the Bearer\
        \ auth header"
      operationId: premiumStatusForUser
      parameters:
        - name: regionCode
          in: query
          description: ISO-3166-2 Region code
          schema:
            type: string
            enum:
              - GB
              - DK
              - "NO"
              - FI
              - SE
              - GR
              - RO
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/UserPremiumStatus"
        "404":
          description: Invalid Bearer token.
          content: {}
  /premium/station/{stationCode}:
    get:
      summary: Get Premium Incentive information for a Station
      operationId: getPremiumForStation
      parameters:
        - name: stationCode
          in: path
          description: The Station to which the premium incentive is attached to
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Premium"
  /premium/app/{appCode}:
    get:
      summary: Get Premium Incentive information for an App
      operationId: getPremiumForApp
      parameters:
        - name: appCode
          in: path
          description: The App to which the premium incentive is attached to
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Premium"
  /premium/region/{regionCode}:
    get:
      summary: Get Premium Incentive information for a Region
      operationId: getPremiumForRegion
      parameters:
        - name: regionCode
          in: path
          description: ISO-3166-2 Region code
          required: true
          schema:
            type: string
            enum:
              - GB
              - "NO"
              - DK
              - FI
              - SE
              - DE
              - GR
              - CY
              - RO
              - MD
              - PL
              - IE
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Premium"
  /presenters/{presenterId}:
    get:
      summary: Get presenter by ID
      operationId: getPresenterById
      parameters:
        - name: presenterId
          in: path
          description: Respective presenter id
          required: true
          schema:
            type: number
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Presenter"
  /presenters:
    get:
      summary:
        Get presenters. (stationId OR stationCode OR brandCode parameter is
        required)
      operationId: getPresenters
      parameters:
        - name: stationId
          in: query
          description: Filter based on Station ID
          schema:
            type: integer
        - name: stationCode
          in: query
          description: Filter based on Station Code
          schema:
            type: string
        - name: brandCode
          in: query
          description: Filter based on Brand Code
          schema:
            type: string
        - name: regionCode
          in: query
          description: Filter based on Region Code
          schema:
            type: string
        - name: since
          in: query
          description:
            "Filter by presenters who have been updated/deleted since this\
            \ time, additionally includes inactive presenters"
          schema:
            type: string
        - name: "presenterId[]"
          in: query
          description: Filter multiple presenter by id;
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Presenter"
  /regionsmeta/{regionCode}:
    get:
      summary: Specific endpoint to Google Home Feed
      operationId: getRegionsMetaByRegionCode
      parameters:
        - name: regionCode
          in: path
          description: ISO-3166-2 Region code
          required: true
          schema:
            type: string
            enum:
              - GB
              - "NO"
              - DK
              - FI
              - SE
              - DE
              - GR
              - CY
              - RO
              - MD
              - PL
              - IE
      responses:
        "200":
          description: Returns regions based on
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/RegionsMeta"
  /regions:
    get:
      summary: Get regions object
      description: List of regions
      operationId: getRegions
      parameters:
        - name: _p
          in: query
          description: "Pagination: Page number"
          schema:
            type: number
        - name: _pp
          in: query
          description: "Pagination: Items per page"
          schema:
            type: number
        - name: _o
          in: query
          description:
            Order data by provided parameter. Prefix with an "-" to order
            inversely. Endpoint must support.
          schema:
            type: string
        - name: "_filter[]"
          in: query
          description:
            "Long-form version to filter data. Post-processes data, may conflict\
            \ with request-specific parameters"
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Return all available regions
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Region"
  /register/{udid}/{appPlatform}/{fullName}/{email}/{gender}/{location}/{age}/{password}:
    post:
      summary: Creates a user account
      description: Creates a user account
      operationId: registerUser
      parameters:
        - name: appPlatform
          in: path
          description: Used by phone applications to identify their source type
          required: true
          schema:
            pattern: "^\\w{3}\\_\\w+$"
            type: string
        - name: udid
          in: path
          description: Unique identifier for a Device
          required: true
          schema:
            type: string
        - name: fullName
          in: path
          description: Full name of an Account
          required: true
          schema:
            type: string
        - name: email
          in: path
          description: Email address of an Account
          required: true
          schema:
            type: string
        - name: gender
          in: path
          description: |
            Allowed genders:
             * `f` - Female
             * `m` - Male
             * `n` - Non-Binary, Binary gender of an Account
             * `o` - Other Gender, "Value" is prefixed with "o" (e.g. "oValue")
          required: true
          schema:
            type: string
        - name: location
          in: path
          description: Geographical coordinates
          required: true
          schema:
            type: string
        - name: age
          in: path
          description: Age in years
          required: true
          schema:
            type: integer
        - name: password
          in: path
          description: User's password
          required: true
          schema:
            type: string
      requestBody:
        content:
          "*/*":
            schema:
              type: object
              properties:
                source:
                  type: string
                  description: The type of user acquisition source
                  example: Livestream
                sourceId:
                  type: string
                  description: A uniquely identifiable user acquisition source
                  example: Kiss Haunted House Party
        required: false
      responses:
        "200":
          description:
            Placeholder for likely-unused endpoints which are blocking
            apigw deployment
          content:
            "*/*":
              schema:
                type: object
      x-codegen-request-body-name: sourceFields
  /reminder/{udid}/{appPlatform}/{stationCode}/{timeCode}/{userId}:
    get:
      summary:
        "Generates and sends email to {user} reminding them of {station}'s\
        \ current show"
      operationId: setUserReminder
      parameters:
        - name: udid
          in: path
          description: Unique identifier for a Device
          required: true
          schema:
            type: string
        - name: appPlatform
          in: path
          description: Used by phone applications to identify their source type
          required: true
          schema:
            pattern: "^\\w{3}\\_\\w+$"
            type: string
        - name: stationCode
          in: path
          description: Filter by Station(Code).
          required: true
          schema:
            type: string
        - name: timeCode
          in: path
          required: true
          schema:
            type: string
        - name: userId
          in: path
          description: Unique identifier for a ListenAPI Account
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content: {}
  /reset/{udid}/{appPlatform}/{emaill}:
    get:
      summary: Reset user's password
      description: "Reset {user.email}'s password and send a reset email"
      operationId: resetUserPassword
      parameters:
        - name: udid
          in: path
          description: Unique identifier for a Device
          required: true
          schema:
            type: string
        - name: appPlatform
          in: path
          description: Used by phone applications to identify their source type
          required: true
          schema:
            pattern: "^\\w{3}\\_\\w+$"
            type: string
        - name: emaill
          in: path
          description: User email
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content: {}
  /scheduledadi/{dadiCode}/{timeStart}/{timeEnd}:
    get:
      summary: '"schedule" but with Dadi ID'
      description: '"schedule" but with Dadi ID'
      operationId: getScheduleDadiByDadiId
      parameters:
        - name: dadiCode
          in: path
          description: Unique Station identifier for Publish
          required: true
          schema:
            type: string
        - name: timeStart
          in: path
          required: true
          schema:
            type: string
        - name: timeEnd
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "Listen Again episodes, grouped by date"
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/DadiSchedule"
  /schedule/{stationCode}/{timeStart}/{timeEnd}:
    get:
      summary: Get schedule object
      operationId: getScheduleByStationCode
      parameters:
        - name: stationCode
          in: path
          description: Filter by Station(Code).
          required: true
          schema:
            type: string
        - name: timeStart
          in: path
          required: true
          schema:
            type: string
        - name: timeEnd
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
                additionalProperties:
                  type: array
                  items:
                    $ref: "#/components/schemas/Schedule"
                description: Return schedules
  /settings/{saveMode}/{udid}/{appPlatform}/{userId}:
    get:
      summary: Retrieves/Saves user's settings
      description: 'Retrieves or (or saves if {saveMode} is "save") user''s settings'
      operationId: getUserSettings
      parameters:
        - name: saveMode
          in: path
          description: Save a user information if value is "save"
          required: true
          schema:
            type: string
        - name: udid
          in: path
          description: Unique identifier for a Device
          required: true
          schema:
            type: string
        - name: appPlatform
          in: path
          description: Used by phone applications to identify their source type
          required: true
          schema:
            pattern: "^\\w{3}\\_\\w+$"
            type: string
        - name: userId
          in: path
          description: Unique identifier for a ListenAPI Account
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content: {}
  /sharpstream:
    get:
      summary: "Rebuild {streamUrl} and redirect to it"
      description: "Rebuild {streamUrl} and redirect to it"
      operationId: setSharpstream
      parameters:
        - name: i
          in: query
          description: "Should be {streamUrl} value"
          required: true
          schema:
            type: string
      responses:
        "302":
          description: Redirects to sharpstream endpoint
          content: {}
  /shows:
    get:
      summary:
        Get shows object. (AppCode OR BrandCode OR StationCode OR RegionCode
        parameter is required)
      operationId: getShows
      parameters:
        - name: AppCode
          in: query
          description:
            "Filter by App(Code). <br> This parameter is incompatible with\
            \ `BrandCode`, `RegionCode`, and `StationCode` parameters."
          schema:
            type: string
        - name: RegionCode
          in: query
          description:
            "Filter by Region(Code). <br> This parameter is incompatible\
            \ with -       `BrandCode`, `AppCode`, and `StationCode` parameters."
          schema:
            type: string
        - name: ForceAppCode
          in: query
          description:
            Force deeplinks to use this AppCode. <br> This parameter is ONLY
            compatible with `RegionCode` parameters.
          schema:
            type: string
        - name: BrandCode
          in: query
          description:
            "Filter by Brand(Code). <br> This parameter is incompatible with\
            \ `AppCode`, `RegionCode`, and `StationCode` parameters."
          schema:
            type: string
        - name: StationCode
          in: query
          description:
            "Filter by Station(Code). <br> This parameter is incompatible\
            \ with `BrandCode`, `AppCode`, and `RegionCode` parameters."
          schema:
            type: string
        - name: "type[]"
          in: query
          description: Filter response by type.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
              enum:
                - podcast
                - boxset
                - listenagain_show
        - name: latest
          in: query
          description: Alias for "order by recency"
          schema:
            type: boolean
        - name: is_active
          in: query
          description: Whether shows must be 'active' (has recently episodes)
          schema:
            type: boolean
        - name: onlyWithAudibles
          in: query
          description: List shows with or without episodes.
          schema:
            type: boolean
        - name: "_filter[is_featured]"
          in: query
          schema:
            type: number
        - name: "_filter[is_premium_only]"
          in: query
          schema:
            type: number
            enum:
              - 0
              - 1
        - name: _p
          in: query
          description: "Pagination: Page number"
          schema:
            type: number
        - name: _pp
          in: query
          description: "Pagination: Items per page"
          schema:
            type: number
        - name: _o
          in: query
          description:
            Order data by provided parameter. Prefix with an "-" to order
            inversely. Endpoint must support.
          schema:
            type: string
        - name: "_filter[]"
          in: query
          description:
            "Long-form version to filter data. Post-processes data, may conflict\
            \ with request-specific parameters"
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Return shows
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Show"
  /shuttlelinks/{identifier}:
    get:
      summary: Get a Shuttle Link object
      operationId: getShuttlelinksById
      parameters:
        - name: identifier
          in: path
          description: Parameter identifier should be a valid ShuttleLink ID.
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Returns a ShuttleLink object
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ShuttleLink"
    post:
      summary:
        Create a Shuttle Link object for a specific entity. Device URLs will
        be auto-generated.
      operationId: setShuttlelinkByEntity
      parameters:
        - name: identifier
          in: path
          description: Parameter identifier should be a valid Entity Type
          required: true
          schema:
            type: string
            enum:
              - event
              - podcast
              - boxset
              - boxset_episode
              - listenagain
              - listenagain_show
              - podcast_episode
      requestBody:
        description: The ShuttleLink body request including extra entity details
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ShuttleLinkEntityTypeBody"
        required: false
      responses:
        "200":
          description: Returns created Shuttle Link object
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ShuttleLink"
      x-codegen-request-body-name: shuttleLink
  /shuttlelinks:
    post:
      summary: Create a Shuttle Link object
      operationId: postShuttlelinks
      requestBody:
        description: The ShuttleLink body request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ShuttleLinkBody"
        required: false
      responses:
        "200":
          description: Returns created Shuttle Link object
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ShuttleLink"
      x-codegen-request-body-name: shuttleLink
  /signIn/station/{stationCode}:
    get:
      summary: Get SignIn Incentive information for a Station
      operationId: getSignInIncentivesForStation
      parameters:
        - name: stationCode
          in: path
          description: The Station to which the sign in incentive is attached to
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SignInIncentive"
  /signIn/app/{appCode}:
    get:
      summary: Get SignIn Incentive information for an App
      operationId: getSignInIncentivesForApp
      parameters:
        - name: appCode
          in: path
          description: The App to which the sign in incentive is attached to
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SignInIncentive"
  /stationlist/{regionCode}:
    get:
      summary: Get list of all stations. Deprecated in favour of "getMinifiedStations"
      operationId: getStationsByRegionCode
      parameters:
        - name: regionCode
          in: path
          description: ISO-3166-2 Region code
          required: true
          schema:
            type: string
            enum:
              - GB
              - "NO"
              - DK
              - FI
              - SE
              - DE
              - GR
              - CY
              - RO
              - MD
              - PL
              - IE
        - name: "AppCode[]"
          in: query
          description: Filter stations by AppCode(s)
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: "StationId[]"
          in: query
          description: Filter based on Station ID(s)
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: "StationCode[]"
          in: query
          description: Filter based on Station Code(s)
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
              default: radio
              enum:
                - radio
                - box set
                - television
        - name: "StationDADIId[]"
          in: query
          description: Filter based on Station DADI ID(s).
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: "StationType[]"
          in: query
          description: Only return stations with StationType of value(s)
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
              enum:
                - radio
                - box set
                - television
        - name: include
          in: query
          description:
            "To request includable data, you can comma-seperate what you\
            \ require in the include parameter, eg. ?include=parameter1,parameter2."
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              enum:
                - stationLatestEpisode
                - stationBrandRelated
                - stationRelated
        - name: test
          in: query
          description:
            Include test stations in the results (when requested work using
            internal IP).
          schema:
            type: string
        - name: X-Forwarded-For
          in: header
          description:
            Required when using test parameter (Is it needed to be a valid
            IP address).
          schema:
            type: string
        - name: _p
          in: query
          description: "Pagination: Page number"
          schema:
            type: number
        - name: _pp
          in: query
          description: "Pagination: Items per page"
          schema:
            type: number
        - name: _o
          in: query
          description:
            Order data by provided parameter. Prefix with an "-" to order
            inversely. Endpoint must support.
          schema:
            type: string
        - name: "_filter[]"
          in: query
          description:
            "Long-form version to filter data. Post-processes data, may conflict\
            \ with request-specific parameters"
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: premium
          in: query
          description: Include Premium content in results
          schema:
            type: integer
            default: 0
            enum:
              - 0
              - 1
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Station"
      deprecated: true
  /stationlist:
    get:
      summary: Get list of all stations. Deprecated in favour of "getMinifiedStations"
      operationId: getStations
      parameters:
        - name: "AppCode[]"
          in: query
          description: Filter stations by AppCode(s)
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: "StationId[]"
          in: query
          description: Filter based on Station ID(s)
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: "StationCode[]"
          in: query
          description: Filter based on Station Code(s)
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: StationCode
          in: query
          description: Filter based on Station Code
          schema:
            type: string
        - name: "StationDADIId[]"
          in: query
          description: Filter based on Station DADI ID(s).
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: "StationType[]"
          in: query
          description: Only return stations with StationType of value(s)
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
              enum:
                - radio
                - box set
                - television
        - name: include
          in: query
          description:
            "To request includable data, you can comma-seperate what you\
            \ require in the include parameter, eg. ?include=parameter1,parameter2."
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              enum:
                - stationBrandRelated
                - stationRelated
                - brand
        - name: test
          in: query
          description:
            Include test stations in the results (when requested work using
            internal IP).
          schema:
            type: integer
            default: 0
            enum:
              - 0
              - 1
        - name: premium
          in: query
          description: Used to append premium stations to stationlist
          schema:
            type: integer
            default: 0
            enum:
              - 0
              - 1
        - name: X-Forwarded-For
          in: header
          description:
            Required when using test parameter (Is it needed to be a valid
            IP address).
          schema:
            type: string
        - name: _p
          in: query
          description: "Pagination: Page number"
          schema:
            type: number
        - name: _pp
          in: query
          description: "Pagination: Items per page"
          schema:
            type: number
        - name: _o
          in: query
          description:
            Order data by provided parameter. Prefix with an "-" to order
            inversely. Endpoint must support.
          schema:
            type: string
        - name: "_filter[]"
          in: query
          description:
            "Long-form version to filter data. Post-processes data, may conflict\
            \ with request-specific parameters"
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Station"
      deprecated: true
  /stationsbyport:
    get:
      summary: Get station code grouped by port
      description: Get station code grouped by port
      operationId: getStationsByPort
      responses:
        "200":
          description: Returns the PORT number as key and StationCode as value
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/StationsByPort"
  /stations_nowplaying/{regionCode}:
    get:
      summary: Get nowplaying / station on air data of stations
      operationId: getNowPlayingAndOnAirForStations
      parameters:
        - name: regionCode
          in: path
          description: ISO-3166-2 Region code
          required: true
          schema:
            type: string
            enum:
              - GB
              - "NO"
              - DK
              - FI
              - SE
              - DE
              - GR
              - CY
              - RO
              - MD
              - PL
              - IE
        - name: "StationCode[]"
          in: query
          description: Filter based on Station Code(s)
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
              default: radio
              enum:
                - radio
                - box set
                - television
        - name: "StationDADIId[]"
          in: query
          description: Filter based on Station DADI ID(s).
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: "StationType[]"
          in: query
          description: Only return stations with StationType of value(s)
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
              enum:
                - radio
                - box set
                - television
        - name: test
          in: query
          description:
            Include test stations in the results (when requested work using
            internal IP).
          schema:
            type: integer
            default: 0
            enum:
              - 0
              - 1
        - name: premium
          in: query
          description: Used to append premium stations to stationlist
          schema:
            type: integer
            default: 0
            enum:
              - 0
              - 1
        - name: X-Forwarded-For
          in: header
          description:
            Required when using test parameter (Is it needed to be a valid
            IP address).
          schema:
            type: string
        - name: _p
          in: query
          description: "Pagination: Page number"
          schema:
            type: number
        - name: _pp
          in: query
          description: "Pagination: Items per page"
          schema:
            type: number
        - name: _o
          in: query
          description:
            Order data by provided parameter. Prefix with an "-" to order
            inversely. Endpoint must support.
          schema:
            type: string
        - name: "_filter[]"
          in: query
          description:
            "Long-form version to filter data. Post-processes data, may conflict\
            \ with request-specific parameters"
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                description: Now playing/Station on air information for stations
                items:
                  $ref: "#/components/schemas/StationNowPlaying"
  /stations/{regionCode}:
    get:
      summary: Get list of all stations
      operationId: getMinifiedStations
      parameters:
        - name: regionCode
          in: path
          description: ISO-3166-2 Region code
          required: true
          schema:
            type: string
            enum:
              - GB
              - "NO"
              - DK
              - FI
              - SE
              - DE
              - GR
              - CY
              - RO
              - MD
              - PL
              - IE
        - name: "AppCode[]"
          in: query
          description: Filter stations by AppCode(s)
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: "StationId[]"
          in: query
          description: Filter based on Station ID(s)
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: "StationCode[]"
          in: query
          description: Filter based on Station Code(s)
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
              default: radio
              enum:
                - radio
                - box set
                - television
        - name: "StationDADIId[]"
          in: query
          description: Filter based on Station DADI ID(s).
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: "StationType[]"
          in: query
          description: Only return stations with StationType of value(s)
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
              enum:
                - radio
                - box set
                - television
        - name: include
          in: query
          description:
            "To request includable data, you can comma-seperate what you\
            \ require in the include parameter, eg. ?include=parameter1,parameter2."
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              enum:
                - stationBrandRelated
                - stationRelated
                - brand
        - name: test
          in: query
          description:
            Include test stations in the results (when requested work using
            internal IP).
          schema:
            type: integer
            default: 0
            enum:
              - 0
              - 1
        - name: X-Forwarded-For
          in: header
          description:
            Required when using test parameter (Is it needed to be a valid
            IP address).
          schema:
            type: string
        - name: _p
          in: query
          description: "Pagination: Page number"
          schema:
            type: number
        - name: _pp
          in: query
          description: "Pagination: Items per page"
          schema:
            type: number
        - name: _o
          in: query
          description:
            Order data by provided parameter. Prefix with an "-" to order
            inversely. Endpoint must support.
          schema:
            type: string
        - name: "_filter[]"
          in: query
          description:
            "Long-form version to filter data. Post-processes data, may conflict\
            \ with request-specific parameters"
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: premium
          in: query
          description: Include Premium content in results
          schema:
            type: integer
            default: 0
            enum:
              - 0
              - 1
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                description: Return a list of minified stations
                items:
                  $ref: "#/components/schemas/StationMinified"
  /streamAuthLevel:
    get:
      summary: Authenticated streams lookup endpoint
      description: Returns stream auth level based on a respective stream url
      operationId: streamAuthLevel
      parameters:
        - name: StreamUrl
          in: query
          description: Url that should match to return the expected level
          required: true
          schema:
            type: string
            format: url
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/StringResponse"
  /ticketsdadi/{dadiCode}:
    get:
      summary: Get tickets with Dadi ID
      description: Retrieves "tickets" but with Dadi ID
      operationId: getTicketsDadiByDadiId
      parameters:
        - name: dadiCode
          in: path
          description: Unique Station identifier for Publish
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                description: ""
                items:
                  $ref: "#/components/schemas/Ticket"
  /tickets/{stationCode}:
    get:
      summary: Get tickets object
      description: Retrieves tickets available (via. <a href="http://aloud.com/">Aloud.com)</a>
      operationId: getTicketsByStationCode
      parameters:
        - name: stationCode
          in: path
          description: Filter by Station(Code).
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                description: ""
                items:
                  $ref: "#/components/schemas/Ticket"
  /tokens/{registrationToken}:
    post:
      summary: DEPRECATED. Update a registration token.
      description: DEPRECATED. Update a registration token.
      operationId: updateToken
      parameters:
        - name: registrationToken
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content: {}
      deprecated: true
    delete:
      summary: Remove a registration token.
      description: Remove a registration token.
      operationId: deleteToken
      parameters:
        - name: registrationToken
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content: {}
  /traveldadi/{dadiCode}:
    get:
      summary: Get travel with Dadi ID
      description: '"travel" but with a Dadi ID'
      operationId: getTrafficWarningsByDadiId
      parameters:
        - name: dadiCode
          in: path
          description: Unique Station identifier for Publish
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                description: ""
                items:
                  $ref: "#/components/schemas/Travel"
  /travel/{stationCode}:
    get:
      summary: Get traffic warning information
      description: "Returns traffic warnings nearby to {station}"
      operationId: getTrafficWarningsByStationCode
      parameters:
        - name: stationCode
          in: path
          description: Filter by Station(Code)
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                description: Returns traffic warning information
                items:
                  $ref: "#/components/schemas/Travel"
  /utterances/{regionCode}:
    get:
      description:
        "List of utterances for this region, arranged by station, device\
        \ type, and locale"
      operationId: getVoiceUtterancesByRegionCode
      parameters:
        - name: regionCode
          in: path
          description: ISO-3166-2 Region code
          required: true
          schema:
            type: string
            enum:
              - GB
              - "NO"
              - DK
              - FI
              - SE
              - DE
              - GR
              - CY
              - RO
              - MD
              - PL
              - IE
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/StationUtterance"
  /verify/{udid}/{appPlatform}/{email}:
    get:
      summary: Verifies user email
      description: Verifies a user's email post-registration
      operationId: verifyUserEmail
      parameters:
        - name: udid
          in: path
          description: Unique identifier for a Device
          required: true
          schema:
            type: string
        - name: appPlatform
          in: path
          description: Used by phone applications to identify their source type
          required: true
          schema:
            pattern: "^\\w{3}\\_\\w+$"
            type: string
        - name: email
          in: path
          description: Email address of an Account
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content: {}
      deprecated: true
components:
  schemas:
    NumericBoolean:
      type: number
      description: Booly numbers deserve love too
      enum:
        - 0
        - 1
    StringBoolean:
      type: string
      description: "These aren't booly, but they want to be"
      enum:
        - "0"
        - "1"
    ImageUrl:
      type: string
      description: "A Url to an image, refer to property name for description"
      format: uri
      example: https://fakeimg.pl/300x300/282828/eae0d0/?retina=1&text=fallback
    StreamUrl:
      type: string
      description: A Url that can be listened to
      format: uri
      example: https://n02.on.revma.com/vtaxxb6knrhvv
    ApiUrl:
      type: string
      description:
        A Url that intended to be to be used in for an API request (Not
        for end-users)
      format: uri
    PageUrl:
      type: string
      description:
        "A Url to an web page which the user can follow, refer to property\
        \ name for description"
      format: uri
      nullable: true
      x-nullable: true
    ShuttleUrl:
      type: string
      description:
        The shuttle URL is used for sharing and is compatible with any
        device that opens it
      format: uri
      example: https://listen.absoluteradio.co.uk/316288
    AppUrl:
      type: string
      description: A URL intended to be opened by a phone application
      format: uri
      example: abrapp://foo/bar
    StringResponse:
      type: string
    StationIds:
      type: array
      description: "These aren't booly, but they want to be"
      items:
        type: number
    ShowOrAudibleId:
      pattern: "^[a-z_]+\\:[0-9]+$"
      type: string
      description:
        A unique identifier that includes the type of content the ID refers
        to
      example: podcast:1234
    PremiumId:
      type: number
      description: A premium package
      example: 1
    StationId:
      type: number
      description: Unique identifier for a station
      example: 1
    StationCode:
      type: string
      description: Unique identifier for a station
      example: abr
    StationName:
      type: string
      description: Single line title of the station
      example: Absolute Radio
    AppId:
      type: number
      description: Unique identifier for an App
      example: 1
    AppCode:
      type: string
      description: Unique identifier for an App
      example: abr
    AppMigrationStatus:
      type: string
      description:
        Used as a hint to determine whether user should be migrated to
        another application
      enum:
        - "true"
        - "false"
        - skip
    BrandId:
      type: number
      description: Unique identifier for a Radio Brand
      example: 1
    BrandCode:
      type: string
      description: Unique identifier for an a Radio Brand
      example: UK_ABSOLUTE
    NetworkId:
      type: number
      description: Unique identifier for a Network
      example: 1
    PodcastId:
      type: number
      description: The unique identifier to a podcast episode
      example: 111223333
    PodcastChannelId:
      type: number
      description:
        The unique identifier to a podcast channel (A collection of podcast
        episodes)
      example: 40948
    PodcastChannelSlug:
      type: string
      description: Unique identifier for a Podcast Channel Show/Collection
      example: my-podcast-channel
    PodcastChannelImageUrl:
      allOf:
        - $ref: "#/components/schemas/ImageUrl"
        - type: string
          format: uri
          example: https://planet-radio-studio-podplay.imgix.net/img/40b90ac258f5340078eb545bf8fa797a?auto=compress&h=1200&w=1200
    PodcastChannelWideImageUrl:
      allOf:
        - $ref: "#/components/schemas/ImageUrl"
        - type: string
          format: uri
          example: https://planet-radio-studio-podplay.imgix.net/img/4dde02ecc65239e56e6a92b16e0cc82d?auto=compress
    PodcastChannelHeroImageUrl:
      allOf:
        - $ref: "#/components/schemas/ImageUrl"
        - type: string
          format: uri
          example: https://planet-radio-studio-podplay.imgix.net/img/9cf69a5d394a2e282e80cd76a983749b?auto=compress
    PodcastChannelHeroWideImageUrl:
      allOf:
        - $ref: "#/components/schemas/ImageUrl"
        - type: string
          format: uri
          example: https://planet-radio-studio-podplay.imgix.net/img/96c56129abdc97a8ad85bf02932b6959?auto=compress
    StationMobileHeroImage:
      allOf:
        - $ref: "#/components/schemas/ImageUrl"
        - type: string
          format: uri
          example: "https://media.bauerradio.com/image/upload/c_crop,g_custom/v1682410332/brand_manager/stations/nosshfqlvhmw1qysg4dp.jpg"
    StationWhiteLogoImage:
      allOf:
        - $ref: "#/components/schemas/ImageUrl"
        - type: string
          format: uri
          example: "https://media.bauerradio.com/image/upload/c_crop,g_custom/v1682406408/brand_manager/stations/p2xelxgjeube0xae5b28.png"
    StationHeroImage:
      allOf:
        - $ref: "#/components/schemas/ImageUrl"
        - type: string
          format: uri
          example: "https://media.bauerradio.com/image/upload/c_crop,g_custom/v1682410327/brand_manager/stations/d9qu5olt462cmuxrw4zz.jpg"
    StationListenBarLogo:
      allOf:
        - $ref: "#/components/schemas/ImageUrl"
        - type: string
          format: uri
          example: "https://media.bauerradio.com/image/upload/c_crop,g_custom/v1678797196/brand_manager/stations/r0zagnytkmu1ewe0gh3t.png"
    StationHeaderLogo:
      allOf:
        - $ref: "#/components/schemas/ImageUrl"
        - type: string
          format: uri
          example: https://assets.planetradio.co.uk/img/ConfigWebHeaderLogoImageUrl/1.png?ver=1463741180
    StationHeaderLogoSVG:
      allOf:
        - $ref: "#/components/schemas/ImageUrl"
        - type: string
          format: uri
          example: https://assets.planetradio.co.uk/img/ConfigWebHeaderLogoSVGImageUrl/1.svg?ver=1467992139
    StationLockScreenImage:
      allOf:
        - $ref: "#/components/schemas/ImageUrl"
        - type: string
          format: uri
          example: "https://media.bauerradio.com/image/upload/c_crop,g_custom/v1682406416/brand_manager/stations/ojyci11tuuy1fdrkoxbd.png"
    ShowId:
      type: number
      description: Unique identifier for a Listen Again Show
      example: 1123123
    ShowTitle:
      type: string
      description: Single line title of the show
      example: Danielle Perry
    ShowDescription:
      type: number
      description: Longer form description of the show
    ShowSlug:
      type: string
      description: Unique identifier for a Listen Again Show
      example: my-show
    EventId:
      type: number
      description: Unique identifier for an Event
      example: 1123123123012379
    ScheduleId:
      type: number
      description: Unique identifier for a Listen Again Episode
      example: 123123
    RegionCode:
      type: string
      description: ISO-3166-2 Region code
      example: GB
      enum:
        - GB
        - "NO"
        - DK
        - FI
        - SE
        - DE
        - GR
        - CY
        - RO
        - MD
        - PL
        - IE
    AudibleTypes:
      type: string
      enum:
        - podcast_episode
        - listenagain
        - boxset_episode
    BroadcastMediaTypes:
      type: string
      enum:
        - DAB
        - Virgin Media
        - Freeview
        - Freesat
        - Sky
        - AM
    RegionId:
      type: integer
      description: Unique identifier for a region
      enum:
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        - 10
        - 11
        - 12
        - 13
        - 14
    BoxSetId:
      type: number
      description: Unique identifier for the parent collection
      example: 336
    BoxSetSlug:
      type: string
      description: Unique identifier a box set collection
      example: pride-not-prejudice
    NielsenVcid:
      type: string
      nullable: true
      x-nullable: true
    DateTime:
      pattern: "^\\d{4}-\\d{2}-\\d{2}\\s\\d{2}:\\d{2}:\\d{2}$"
      type: string
      description: "Either UtcTime or Localised time, dependant on context"
      format: date-time
    HexCodeColor:
      pattern: "^#[a-fA-F0-9]{6}$"
      type: string
      description: "A colour, as a complete hex string"
      example: "#5D2466"
    DurationInSeconds:
      type: number
      description: "A duration, in seconds"
      example: 666
    Email:
      pattern: ^.+@.+$
      type: string
      description: The email address of a user (PII)
      example: john.smith@bauermedia.co.uk
    DfpAdPath:
      type: string
      description:
        "DFP ad path, may contain \"%url%\" which clients must replace\
        \ with the URL"
      example: RDENMARK/%url%
    EmbeddedPodcastEpisode:
      type: object
      properties:
        podcast_episode:
          $ref: "#/components/schemas/PodcastEpisode"
    EmbeddedListenAgainEpisode:
      type: object
      properties:
        listenagain:
          $ref: "#/components/schemas/ListenAgain"
    EmbeddedBoxSetEpisode:
      type: object
      properties:
        boxset_episode:
          $ref: "#/components/schemas/BoxSetEpisode"
    EmbeddedPodcastShow:
      type: object
      properties:
        podcast:
          $ref: "#/components/schemas/PodcastChannel"
    EmbeddedBoxSet:
      type: object
      properties:
        boxset:
          $ref: "#/components/schemas/BoxSet"
    EmbeddedListenAgainShow:
      type: object
      properties:
        listenagain_show:
          $ref: "#/components/schemas/ListenAgainShow"
    AggregatorBrandResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/AggregatorBrand"
      description: Payload response containing a list of aggregator brands
    AppListResponse:
      type: array
      description: List of (phone) applications
      items:
        $ref: "#/components/schemas/App"
    AggregatorBrandModuleContentPriority:
      type: string
      description: An ordered list that hints at how content should be prioritised
      format: csv
      enum:
        - hero
        - stations_featured
        - promotion
        - podcasts_featured
        - shows_random
        - stations_all
    AggregatorBrand:
      required:
        - AggregatorBrandAdvertiseUrl
        - AggregatorBrandBannerClickAction
        - AggregatorBrandBannerDesktopImageUrl
        - AggregatorBrandBannerMobileImageUrl
        - AggregatorBrandBannerTargetUrl
        - AggregatorBrandCode
        - AggregatorBrandColor
        - AggregatorBrandCompetitionTermsUrl
        - AggregatorBrandCookiesUrl
        - AggregatorBrandDesktopHeroImageUrl
        - AggregatorBrandDisplayAggregatorMenu
        - AggregatorBrandFacebookUrl
        - AggregatorBrandId
        - AggregatorBrandInPagePlayerEnabled
        - AggregatorBrandIsPremiumEnabled
        - AggregatorBrandLogoImageUrl
        - AggregatorBrandMobileHeroImageUrl
        - AggregatorBrandModuleContentPriority
        - AggregatorBrandName
        - AggregatorBrandPodcastContentPriority
        - AggregatorBrandPremiumSocialShareImageUrl
        - AggregatorBrandPrivacyUrl
        - AggregatorBrandSocialSharingImageUrl
        - AggregatorBrandSplashLogoImageUrl
        - AggregatorBrandStrapline
        - AggregatorBrandTermsUrl
        - AggregatorBrandTwitterUrl
        - AggregatorBrandWebLogoHeaderImageUrl
        - AggregatorBrandWebLogoImageUrl
        - AggregatorBrandWebsiteUrl
        - AggregatorBrandWhiteLogoImageUrl
        - RegionCode
        - StationIds
      type: object
      properties:
        AggregatorBrandId:
          type: integer
          description: Unique identifier
          example: 1
        AggregatorBrandCode:
          type: string
          description: Unique identifier
          example: UK_PLANETRADIO
        AggregatorBrandName:
          type: string
          description: Human-friendly name
          example: Planet Radio
        AggregatorBrandStrapline:
          type: string
          description: An enticing hook suited to the brand
          example: The Best Music on Earth. 24/7.
        AggregatorBrandColor:
          type: string
          description: Hex code colour string to be used as a baseline for the branding
          example: "null"
        AggregatorBrandModuleContentPriority:
          minItems: 6
          type: array
          items:
            $ref: "#/components/schemas/AggregatorBrandModuleContentPriority"
        AggregatorBrandPodcastContentPriority:
          type: string
          default: "null"
        AggregatorBrandDisplayAggregatorMenu:
          type: object
          allOf:
            - $ref: "#/components/schemas/NumericBoolean"
            - type: object
              description: Whether to display aggregator menu
        AggregatorBrandInPagePlayerEnabled:
          type: object
          allOf:
            - $ref: "#/components/schemas/NumericBoolean"
            - type: object
              description: Whether to display aggregator menu
        AggregatorBrandWebLogoImageUrl:
          type: string
          format: uri
          example: https://assets.planetradio.co.uk/img/AggregatorBrandWebLogoHeaderImageUrl/1.svg?ver=1572531086
        AggregatorBrandWebLogoHeaderImageUrl:
          type: string
          format: uri
          example: https://assets.planetradio.co.uk/img/AggregatorBrandWebLogoHeaderImageUrl/1.svg?ver=1572531086
        AggregatorBrandSocialSharingImageUrl:
          type: object
          allOf:
            - $ref: "#/components/schemas/ImageUrl"
            - type: string
              example: https://assets.planetradio.co.uk/img/AggregatorBrandSocialSharingImageUrl/1.png
        AggregatorBrandMobileHeroImageUrl:
          type: object
          allOf:
            - $ref: "#/components/schemas/ImageUrl"
            - type: string
              example: https://assets.planetradio.co.uk/img/AggregatorBrandMobileHeroImageUrl/1.png
        AggregatorBrandDesktopHeroImageUrl:
          type: object
          allOf:
            - $ref: "#/components/schemas/ImageUrl"
            - type: string
              example: https://assets.planetradio.co.uk/img/AggregatorBrandDesktopHeroImageUrl/1.png
        AggregatorBrandWebsiteUrl:
          type: object
          allOf:
            - $ref: "#/components/schemas/PageUrl"
            - type: string
              example: https://radioplay.dk/
        AggregatorBrandPrivacyUrl:
          type: object
          allOf:
            - $ref: "#/components/schemas/PageUrl"
            - type: string
              example: https://radioplay.dk/privatliv/
        AggregatorBrandTermsUrl:
          type: object
          allOf:
            - $ref: "#/components/schemas/PageUrl"
            - type: string
              example: https://radioplay.dk/servicevilkar/
        AggregatorBrandCompetitionTermsUrl:
          type: object
          allOf:
            - $ref: "#/components/schemas/PageUrl"
            - type: string
              example: https://radioplay.dk/servicevilkar/
        AggregatorBrandCookiesUrl:
          type: object
          allOf:
            - $ref: "#/components/schemas/PageUrl"
            - type: string
              example: https://radioplay.dk/cookies/
        AggregatorBrandFacebookUrl:
          type: object
          allOf:
            - $ref: "#/components/schemas/PageUrl"
            - type: string
              example: https://www.facebook.com/radioplaydk/
        AggregatorBrandTwitterUrl:
          type: object
          allOf:
            - $ref: "#/components/schemas/PageUrl"
            - type: string
              example: https://twitter.com/radioplaydk
        AggregatorBrandBannerDesktopImageUrl:
          type: object
          allOf:
            - $ref: "#/components/schemas/ImageUrl"
            - type: string
              example: https://assets.planetradio.co.uk/img/AggregatorBrandBannerDesktopImageUrl/2.jpg?ver=1573636397
        AggregatorBrandBannerMobileImageUrl:
          type: object
          allOf:
            - $ref: "#/components/schemas/ImageUrl"
            - type: string
              example: https://assets.planetradio.co.uk/img/AggregatorBrandBannerMobileImageUrl/2.jpg?ver=1573636398
        AggregatorBrandBannerTargetUrl:
          type: object
          allOf:
            - $ref: "#/components/schemas/PageUrl"
            - type: string
              example: https://uhd2b.app.link/
        AggregatorBrandBannerClickAction:
          type: string
          description: Hint at what should happen if a user clicks a link
          enum:
            - self
            - blank
        AggregatorBrandLogoImageUrl:
          type: object
          allOf:
            - $ref: "#/components/schemas/ImageUrl"
            - type: string
              example: https://assets.planetradio.co.uk/img/AggregatorBrandLogoImageUrl/1.png
        AggregatorBrandWhiteLogoImageUrl:
          type: object
          allOf:
            - $ref: "#/components/schemas/ImageUrl"
            - type: string
              example: https://assets.planetradio.co.uk/img/AggregatorBrandLogoImageUrl/5d6677bfe2e431.10945498.png
        AggregatorBrandSplashLogoImageUrl:
          type: object
          allOf:
            - $ref: "#/components/schemas/ImageUrl"
            - type: string
              example: https://assets.planetradio.co.uk/img/AggregatorBrandSplashLogoImageUrl/5d6677c0406592.03628871.png
        AggregatorBrandPremiumSocialShareImageUrl:
          type: object
          allOf:
            - $ref: "#/components/schemas/ImageUrl"
            - type: string
              example: "https://media.bauerradio.com/image/upload/c_crop,g_custom/v1636542210/brand_manager/aggregator_brands/ocktbebkz7r7msxwcgxj.png"
        RegionCode:
          $ref: "#/components/schemas/RegionCode"
        StationIds:
          $ref: "#/components/schemas/StationIds"
        AggregatorBrandAdvertiseUrl:
          type: object
          allOf:
            - $ref: "#/components/schemas/ImageUrl"
            - type: string
              example: https://www.bauermedia.co.uk/brands
        AggregatorBrandIsPremiumEnabled:
          type: boolean
          description: Whether this brand supports premium features
      description: Aggregator Brands is a collection of stations and apps
    App:
      required:
        - AppAndroidAdswizzInstallationId
        - AppCode
        - AppDFPAndroid
        - AppDFPIOS
        - AppDeleted
        - AppFirebaseProjectId
        - AppGoogleSigningSHA
        - AppGoogleTestApp
        - AppGoogleTestAppVersion
        - AppIOSAdswizzInstallationId
        - AppITunesBundleId
        - AppITunesBundleIdEnt
        - AppITunesPrefix
        - AppITunesPrefixEnt
        - AppITunesTestApp
        - AppITunesTestAppVersion
        - AppIconImageUrl
        - AppIconSmallImageUrl
        - AppId
        - AppLoginType
        - AppName
        - AppNative
        - AppPlayerId
        - AppPushEnabled
        - AppRateMeLater
        - AppRateMeMessage
        - AppRateMeNo
        - AppRateMeTitle
        - AppRateMeYes
        - AppRegionId
        - AppShowPriorities
        - AppTrialExpiredMessage
        - AppUniversalDomainCert
        - AppUniversalDomainChain
        - AppUniversalDomainKey
        - AppUniversalLinkDomain
        - AppUpdated
      type: object
      properties:
        AppId:
          type: integer
          description: Numeric unique identifier
          example: 1
        AppCode:
          type: string
          description: Unique slug identifier
          example: abr
        AppName:
          type: string
          description: Human friendly app name
          example: Appsolute Radio
        AppUpdated:
          type: object
          allOf:
            - type: object
              description: The last time the app's meta data was updated
            - $ref: "#/components/schemas/DateTime"
        AppDeleted:
          type: object
          allOf:
            - type: object
              description:
                When the app was soft-deleted. Null infers the app has not
                been soft-deleted
              x-nullable: true
            - $ref: "#/components/schemas/DateTime"
        AppITunesStoreId:
          type: string
          description: Unique identifier for Apple ITunes
          example: "308966633"
        AppGoogleBundleId:
          type: string
          example: tv.umee.absoluteradio
        AppITunesBundleId:
          type: string
          example: tv.umee.absoluteradio
        AppITunesTestApp:
          type: string
          example: abr-appitunestestapp-1581498412.ipa
        AppITunesTestAppVersion:
          type: string
          nullable: true
        AppGoogleTestApp:
          type: string
          example: com.android.abr - v9-2022.02.07.09.00.45.apk
        AppGoogleTestAppVersion:
          type: string
          nullable: true
        AppRateMeTitle:
          type: string
          example: EVERYBODY IS A CRITIC
        AppRateMeMessage:
          type: string
          example: Please can you rate this app? We crave validation from you
        AppRateMeYes:
          type: string
          example: Do it. Do it NOW.
        AppRateMeNo:
          type: string
          description: I shan't
        AppRateMeLater:
          type: string
          description: Maybe later
        AppTrialExpiredMessage:
          type: string
          description: Message provided to user to prompt them to sign up
          example:
            Login or register for a free Absolute Radio account and you'll
            get access to Absolute Radio on-demand
        AppNative:
          $ref: "#/components/schemas/NumericBoolean"
        AppUniversalLinkDomain:
          type: string
          description: Domain used by Shuttle Service to build shuttle links
          example: listen.absoluteradio.co.uk
        AppITunesPrefix:
          type: string
          example: J83LE366S7
        AppPlayerId:
          type: string
          description: Loosely used for market segmentation
          example: BMUK
        AppGoogleSigningSHA:
          type: string
        AppUniversalDomainKey:
          type: integer
          example: 2
        AppUniversalDomainCert:
          type: integer
          example: 1
        AppUniversalDomainChain:
          type: integer
          example: 3
        AppPushEnabled:
          $ref: "#/components/schemas/NumericBoolean"
        AppLoginType:
          $ref: "#/components/schemas/LoginType"
        AppDFPIOS:
          type: string
          example: /24156345/RAPP/RNAT_absolute/app-ios
        AppDFPAndroid:
          type: string
          example: /24156345/RAPP/RNAT_absolute/app-android
        AppRegionId:
          $ref: "#/components/schemas/RegionId"
        AppITunesPrefixEnt:
          type: string
          example: MTSCNK94TC
        AppITunesBundleIdEnt:
          type: string
          example: com.bauermedia.abr
        AppIconImageUrl:
          type: object
          allOf:
            - $ref: "#/components/schemas/ImageUrl"
            - type: string
              example: https://listenapi.s3.amazonaws.com/appicons/abr-1535644318.png
        AppIconSmallImageUrl:
          type: object
          allOf:
            - $ref: "#/components/schemas/ImageUrl"
            - type: string
              example: https://listenapi.s3.amazonaws.com/appicons/small_abr-1535644318.png
        AppShowPriorities:
          type: array
          description: Hints at the content sorting priorities for the app
          items:
            type: string
            description: Unique identifier for a piece of content
        AppIOSAdswizzInstallationId:
          type: string
          example: bauerukios
        AppAndroidAdswizzInstallationId:
          type: string
          example: bauerukandroid
        AppFirebaseProjectId:
          type: string
      description: A phone application
    Artist:
      required:
        - id
        - image
        - imageSmall
        - name
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier
        name:
          type: string
          description: Human-friendly name of the artist
        image:
          $ref: "#/components/schemas/ImageUrl"
        imageSmall:
          $ref: "#/components/schemas/ImageUrl"
      description: A music artist or group
    AudibleBase:
      type: object
      properties:
        id:
          pattern: ^(podcast|boxset|listenagain_show)\:.+$
          type: string
          description: A unique identifier that includes the type of entity
          example: podcast:123
        type:
          $ref: "#/components/schemas/AudibleTypes"
        title:
          type: string
          description: Human-friendly title of the audible
        published_at:
          type: string
          description: The time the content was first made available (published)
        duration:
          type: object
          allOf:
            - $ref: "#/components/schemas/DurationInSeconds"
            - type: object
              description: "The duration of the audible content, in seconds"
        url:
          type: string
          description: The website URL associated to the audible
          format: uri
          example: https://planetradio.co.uk/podcasts/manford/listen/2073130/
        app_url:
          type: string
          description: The app URL associated to the audibles
          format: uri
          example: abrapp://podcast/manford/10071194/play/
        shuttle_url:
          $ref: "#/components/schemas/ShuttleUrl"
        is_downloadable:
          type: boolean
          description: Hints at whether the audible can be downloaded
        is_premium_only:
          type: boolean
          description:
            Hints at whether the audible should only be available to users
            with premium access
      description: Properties that an audible will always contain
    Audible:
      allOf:
        - $ref: "#/components/schemas/AudibleBase"
        - $ref: "#/components/schemas/EmbeddedPodcastEpisode"
        - $ref: "#/components/schemas/EmbeddedListenAgainEpisode"
        - $ref: "#/components/schemas/EmbeddedBoxSetEpisode"
    BoxSetEpisodeType:
      type: string
      enum:
        - full
        - trailer
        - bonus
    BoxSetTitle:
      type: string
      description: The title of the box set episode's parent show
      example: Dave's party box set
    BoxSetEpisode:
      required:
        - BoxSetEpisodeDescription
        - BoxSetEpisodeDuration
        - BoxSetEpisodeExpiryDate
        - BoxSetEpisodeId
        - BoxSetEpisodeImageThumbnailUrl
        - BoxSetEpisodeImageUrl
        - BoxSetEpisodeIsPremiumOnly
        - BoxSetEpisodeMediaType
        - BoxSetEpisodeOrder
        - BoxSetEpisodePublishDate
        - BoxSetEpisodeSmartLink
        - BoxSetEpisodeStationCode
        - BoxSetEpisodeTitle
        - BoxSetEpisodeType
        - BoxSetEpisodeWideImageUrl
        - BoxSetId
        - BoxSetSlug
        - BoxSetTitle
        - StationCodes
        - StationTest
      type: object
      properties:
        BoxSetEpisodeId:
          type: number
          description: Unique identifier
          example: 317907.0
        BoxSetId:
          $ref: "#/components/schemas/BoxSetId"
        BoxSetEpisodeTitle:
          type: string
          description: Human-readible name for the box set episode
          example: Cinch presents Isle of Wight Festival 2022 - Blossoms
        BoxSetEpisodeDescription:
          type: string
          description: A multi-line description
          example: |
            Catch up on all the best bits from cinch presents Isle of Wight Festival! We've been broadcasting all week long from the island and you can hear main stage and big top highlights plus exclusive interviews right here.

            Features Muse, Kasabian, Blossoms, Wet Leg and more!
        BoxSetEpisodeImageUrl:
          $ref: "#/components/schemas/ImageUrl"
        BoxSetEpisodeImageThumbnailUrl:
          $ref: "#/components/schemas/ImageUrl"
        BoxSetEpisodeMediaUrl:
          $ref: "#/components/schemas/StreamUrl"
        BoxSetEpisodeMediaType:
          type: string
          description: The mime-type of BoxSetEpisodeMediaUrl
          example: audio/m4a
        BoxSetEpisodeDuration:
          type: object
          allOf:
            - $ref: "#/components/schemas/DurationInSeconds"
            - type: object
              description: "Duration of the box set episode, in seconds"
        BoxSetEpisodePublishDate:
          type: object
          allOf:
            - type: object
              description: When the episode was published
            - $ref: "#/components/schemas/DateTime"
        BoxSetEpisodeOrder:
          type: number
          description: Hints at the sort order in the context of other box set episodes
        BoxSetEpisodeExpiryDate:
          type: object
          allOf:
            - type: object
              description:
                When the episode will expire. A time in the past means the
                episode has expired
            - $ref: "#/components/schemas/DateTime"
        BoxSetEpisodeSmartLink:
          $ref: "#/components/schemas/ShuttleUrl"
        BoxSetEpisodeWideImageUrl:
          $ref: "#/components/schemas/ImageUrl"
        BoxSetEpisodeStationCode:
          type: object
          allOf:
            - $ref: "#/components/schemas/StationCode"
            - type: object
              description: The Station the box set episode _directly_ belongs to
        StationTest:
          type: boolean
        BoxSetSlug:
          $ref: "#/components/schemas/BoxSetSlug"
        BoxSetEpisodeIsPremiumOnly:
          type: boolean
        BoxSetEpisodeIsBehindPaywall:
          type: boolean
          description: Whether a box set episode is behind a paywall
        BoxSetEpisodeIsBehindLogin:
          type: boolean
          description: Whether a box set episode is behind a login
        BoxSetEpisodeType:
          $ref: "#/components/schemas/BoxSetEpisodeType"
        BoxSetTitle:
          $ref: "#/components/schemas/BoxSetTitle"
        StationCodes:
          type: array
          description: The stations that the _parent box set_ is associated with
          items:
            $ref: "#/components/schemas/StationCode"
      description: An audible episode that belong to a box set collection
    BoxSet:
      required:
        - BoxSetAdultsOnly
        - BoxSetDescription
        - BoxSetId
        - BoxSetImageThumbnailUrl
        - BoxSetImageUrl
        - BoxSetPublishDate
        - BoxSetRssBuildDate
        - BoxSetSmartLink
        - BoxSetSubtitle
        - BoxSetTitle
        - BoxSetUrl
        - BoxSetWideImageUrl
        - StationCode
        - StationCodes
        - StationId
        - StationIds
        - StationTest
      type: object
      properties:
        BoxSetId:
          $ref: "#/components/schemas/BoxSetId"
        StationId:
          $ref: "#/components/schemas/StationId"
        StationCode:
          $ref: "#/components/schemas/StationCode"
        BoxSetTitle:
          $ref: "#/components/schemas/BoxSetTitle"
        BoxSetUrl:
          $ref: "#/components/schemas/PageUrl"
        BoxSetDescription:
          type: string
          description: Human-friendly multi-line description of the box set
          example: |
            At Absolute 80s, we interview some of the biggest stars of the 80s - listen back to those chats here, as well as album specials and more!

            :)
        BoxSetImageUrl:
          $ref: "#/components/schemas/ImageUrl"
        BoxSetImageThumbnailUrl:
          $ref: "#/components/schemas/ImageUrl"
        BoxSetSmartLink:
          $ref: "#/components/schemas/ShuttleUrl"
        BoxSetPublishDate:
          $ref: "#/components/schemas/DateTime"
        BoxSetRssBuildDate:
          $ref: "#/components/schemas/DateTime"
        BoxSetWideImageUrl:
          $ref: "#/components/schemas/ImageUrl"
        BoxSetAdultsOnly:
          type: boolean
          description: Whether the box set is intended only for adults
        BoxSetSubtitle:
          type: string
          description: Human friendly summary of the box set
          example: 'The best interviews and specials from Absolute 80s.",'
        BoxSetIsBehindPaywall:
          type: boolean
          description: Whether a box set is behind a paywall
        StationTest:
          type: boolean
          description: Whether the main station is a test station
        UpdatedAt:
          $ref: "#/components/schemas/DateTime"
        StationIds:
          type: array
          description: Stations that box set loosely related to
          items:
            $ref: "#/components/schemas/StationId"
        StationCodes:
          type: array
          description: Stations that box set loosely related to
          items:
            $ref: "#/components/schemas/StationId"
      description: A collection of box set episodes
    Brand:
      required:
        - BrandCode
        - BrandColor
        - BrandId
        - BrandIncentiveText
        - BrandLogoImageUrl
        - BrandName
        - BrandPrivacyUrl
        - BrandSplashLogoImageUrl
        - BrandTermsUrl
        - BrandWebsiteUrl
        - BrandWhiteLogoImageUrl
        - RegionId
      type: object
      properties:
        BrandId:
          $ref: "#/components/schemas/BrandId"
        BrandCode:
          $ref: "#/components/schemas/BrandCode"
        BrandName:
          type: string
          description: Human-friendly name of the Brand
          example: Absolute Radio
        RegionId:
          $ref: "#/components/schemas/RegionId"
        BrandWebsiteUrl:
          $ref: "#/components/schemas/PageUrl"
        BrandLogoImageUrl:
          $ref: "#/components/schemas/ImageUrl"
        BrandDomain:
          type: string
          example: UK_RADIO
        BrandIncentiveText:
          type: string
          example:
            You’ll hear fewer adverts and get bonus songs when you sign in.
            Enter your email address to sign in or create an Absolute Radio account.
        BrandPrivacyUrl:
          $ref: "#/components/schemas/PageUrl"
        BrandTermsUrl:
          $ref: "#/components/schemas/PageUrl"
        BrandWhiteLogoImageUrl:
          $ref: "#/components/schemas/ImageUrl"
        BrandSplashLogoImageUrl:
          $ref: "#/components/schemas/ImageUrl"
        BrandColor:
          $ref: "#/components/schemas/HexCodeColor"
    ContentArticle:
      type: object
      properties:
        date:
          $ref: "#/components/schemas/DateTime"
        station_code:
          $ref: "#/components/schemas/StationCode"
        category:
          type: string
        title:
          type: string
        image:
          $ref: "#/components/schemas/ImageUrl"
        url:
          $ref: "#/components/schemas/PageUrl"
      description: 'Article, sourced from "Publish API"'
    DeviceToken:
      type: object
      properties:
        success:
          type: integer
      xml:
        name: device
    Device:
      type: string
    EventsXml:
      type: object
      properties:
        events:
          $ref: "#/components/schemas/CurrentAndFutureEvents"
    EpgShow:
      type: object
      properties:
        showid:
          type: object
          allOf:
            - $ref: "#/components/schemas/ShowId"
            - type: string
              description:
                "Matches Show table, (even if the ID isn't a listen again\
                \ show)"
              example: "4772"
        title:
          type: string
          description: Human-friendly title for the show
          example: Hometime with Bush & Richie
        shortdesc:
          type: string
          example:
            "The Hometime show, brought to you by Andy Bush & Richie Firth.\
            \ 3 hours of nonsense presented by 2 confused dads. Apologies in advance."
        image_url:
          type: object
          allOf:
            - $ref: "#/components/schemas/ImageUrl"
            - type: string
              description: Cover image for show (1:1)
              example: https://media.bauerradio.com/image/upload/q_auto/v1637086122/shows/fenmryfluciq99cokvom.jpg
              x-nullable: false
    Event:
      required:
        - eventAppleMusicUrl
        - eventDuration
        - eventFinish
        - eventId
        - eventImageUrl
        - eventImageUrlSmall
        - eventSongArtist
        - eventSongTitle
        - eventStart
        - eventType
      type: object
      properties:
        eventId:
          $ref: "#/components/schemas/EventId"
        eventStart:
          $ref: "#/components/schemas/DateTime"
        eventFinish:
          $ref: "#/components/schemas/DateTime"
        eventDuration:
          $ref: "#/components/schemas/DurationInSeconds"
        eventType:
          type: string
          example: Song
          enum:
            - Song
            - "0"
        eventSongTitle:
          type: string
          example: American Girl
        eventSongArtist:
          type: string
          example: Tom Petty
        eventImageUrl:
          $ref: "#/components/schemas/ImageUrl"
        eventImageUrlSmall:
          $ref: "#/components/schemas/ImageUrl"
        eventAppleMusicUrl:
          type: object
          allOf:
            - $ref: "#/components/schemas/PageUrl"
            - type: object
              x-deprecated: true
    Init:
      type: array
      items:
        type: object
        allOf:
          - $ref: "#/components/schemas/EmbeddedStations"
          - $ref: "#/components/schemas/EmbeddedInitSettings"
          - $ref: "#/components/schemas/EmbeddedInitAdCall"
          - $ref: "#/components/schemas/EmbeddedInitBrand"
          - $ref: "#/components/schemas/EmbeddedInitMigration"
    EmbeddedStations:
      type: object
      properties:
        stations:
          type: array
          items:
            $ref: "#/components/schemas/Station"
    EmbeddedInitSettings:
      type: object
      properties:
        settings:
          $ref: "#/components/schemas/InitSettings"
    InitSettings:
      type: object
      properties:
        hqOptions:
          type: string
        shouldNag:
          type: string
        streamParams:
          type: string
          description: Query parameters which need to be appended to the stream
          example: "&listenerid=0&lat=0.00&lon=0.00&carrier=unknown&awparams=loggedin:false;preroll:1;carrier:unknown;&aw_0_req.gdpr=true&amsparams=playerid:BMUK_iPhone;skey:1566556087;"
        skipLogin:
          type: string
        appITunesStoreId:
          type: number
          description: Integration with Apple App Store
          example: 12345678974
        appGoogleBundleId:
          type: string
          description: Integration with Google
          example: com.android.foo
        appType:
          type: string
          description: Infers user workflow of app
          enum:
            - radio
            - aggregator
        appLanguage:
          type: string
          description: ISO 639-1 language code
          example: en
        appPushNotifications:
          type: string
        appIncentiveText:
          type: string
          description: Message used to incentivise user to register/sign up
          example: You'll hear 50% fewer ads when you sign in. Enter your email address.
        appRateMeTitle:
          type: string
          example: Everybody is a critic
        appRateMeMessage:
          type: string
          example:
            "If you enjoy using this app, we'd appreciate it if you took a\
            \ moment to rate us in the app store."
        appRateMeYes:
          type: string
          example: Rate now
        appRateMeNo:
          type: string
          example: "No, thanks"
        appRateMeLater:
          type: string
          example: Ask me later
        appLoginType:
          $ref: "#/components/schemas/LoginType"
        audioPreviewLength:
          type: number
          example: 800.0
        audioPreviewExpiryText:
          type: string
          example:
            Login or register for a free at Example Radio account and you'll
            get access to Example Radio on-demand and exclusive competitions.
        facebookAppID:
          type: string
          description: Integration ID for Facebook
        firebaseAppID:
          type: string
          description: Integration ID for Firebase
        googleAnalyticsAppID:
          type: string
          description: Integration ID for Google Analytics
        adswizzinstallid:
          type: string
          example: bauerukios
        gdpr:
          type: string
        autoPlay:
          type: string
        signInIncentive:
          $ref: "#/components/schemas/SignInIncentive"
    EmbeddedInitAdCall:
      type: object
      properties:
        adcall:
          $ref: "#/components/schemas/InitAdCall"
    InitAdCall:
      type: object
      properties:
        IphoneInterstitialAdId:
          type: integer
        IphoneBannerAdId:
          type: integer
        AndroidInterstitialAdId:
          type: integer
        AndroidBannerAdId:
          type: integer
        IpadInterstitialAdId:
          type: integer
        IpadMpuAdId:
          type: integer
        IpadBannerAdId:
          type: integer
        IphoneTransitionalAdId:
          type: integer
        AndroidTransitionalAdId:
          type: integer
        IpadTransitionalAdId:
          type: integer
        DFPIOSId:
          type: string
        DFPAndroidId:
          type: string
    EmbeddedInitBrand:
      type: object
      properties:
        brand:
          $ref: "#/components/schemas/InitBrand"
    InitBrand:
      type: object
      properties:
        type:
          type: string
          description: "Type of brand, synonymous with AppType"
          xml:
            attribute: true
          enum:
            - aggregator
            - brand
        id:
          $ref: "#/components/schemas/BrandId"
        code:
          $ref: "#/components/schemas/BrandCode"
        name:
          type: string
          example: Absolute Brand
        deleted:
          $ref: "#/components/schemas/DateTime"
        websiteUrl:
          type: object
          allOf:
            - $ref: "#/components/schemas/PageUrl"
            - type: string
              description: The brand's website
              example: http://example.com/foo-bar
        color:
          type: object
          allOf:
            - $ref: "#/components/schemas/HexCodeColor"
            - type: object
              description: Primary colour used by the brand
        privacyUrl:
          type: object
          allOf:
            - $ref: "#/components/schemas/PageUrl"
            - type: string
              description: Location of brand's Privacy policy
              example: http://example.com/to/privacy-policy
        termsUrl:
          type: object
          allOf:
            - $ref: "#/components/schemas/PageUrl"
            - type: string
              description: Location of the brand's Terms and Conditions
              example: http://example.com/to/terms-conditions
        whiteLogoImageUrl:
          type: object
          allOf:
            - $ref: "#/components/schemas/ImageUrl"
            - type: string
              example: https://dummyimage.com/290x124/000000/fff
        splashLogoImageUrl:
          type: object
          allOf:
            - $ref: "#/components/schemas/ImageUrl"
            - type: string
              example: https://dummyimage.com/780x264/000000/fff
    EmbeddedInitMigration:
      type: object
      properties:
        migration:
          $ref: "#/components/schemas/EmbeddedInitMigration"
    InitMigration:
      type: object
      properties:
        car:
          $ref: "#/components/schemas/CarMigration"
        app:
          $ref: "#/components/schemas/AppMigration"
    AppMigration:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/AppMigrationStatus"
        title:
          type: string
          example: We've moved!
        description:
          type: string
          example:
            "To continue listening to great music, you will need to get the\
            \ [Distination App] app from the Store"
        target:
          $ref: "#/components/schemas/AppMigrationTarget"
    AppMigrationTarget:
      type: object
      properties:
        icon:
          type: object
          allOf:
            - $ref: "#/components/schemas/ImageUrl"
            - type: object
              description: A square icon
        name:
          type: string
          description: The name of the target application
          example: Absolute Radio
        publisher:
          type: string
          description: The name of the publisher
        apple:
          $ref: "#/components/schemas/AppMigrationButton"
        google:
          $ref: "#/components/schemas/AppMigrationButton"
    AppMigrationButton:
      type: object
      properties:
        button:
          type: string
          description: Button text
          example: Download on App Store
        url:
          $ref: "#/components/schemas/AppUrl"
    CarMigration:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/AppMigrationStatus"
        title:
          type: string
          example: We're moving!
        description:
          type: string
          example:
            "To continue listening to great music, you will need to get the\
            \ [Distination App] app from the Store"
    Instream:
      type: object
      properties:
        fullscreen:
          type: string
        fullscreenhtml:
          type: string
    ListenAgainEpisode:
      required:
        - duration
        - episodeid
        - imageurl
        - imageurl_square
        - mediaurl
        - mediaurl_mp3
        - playerurl
        - playlist
        - shortdesc
        - showid
        - smartlink
        - starttime
        - title
      type: object
      properties:
        episodeid:
          type: number
        showid:
          type: number
        starttime:
          type: string
        title:
          type: string
        shortdesc:
          type: string
        smartlink:
          type: string
        duration:
          type: object
          allOf:
            - $ref: "#/components/schemas/DurationInSeconds"
            - type: object
              description: "The duration of the listen again episode content, in seconds"
        mediaurl:
          type: string
          format: uri
        mediaurl_mp3:
          type: string
          format: uri
        playerurl:
          type: string
          format: uri
        imageurl_square:
          type: string
          format: uri
        imageurl:
          type: string
          format: uri
        playlist:
          type: string
    ListenAgainShowPresenter:
      type: object
      properties:
        ShowPresenterId:
          type: number
        ShowPresenterSlug:
          type: string
          example: presenter-slug
        ShowPresenterImageUrl:
          type: string
          format: uri
        ShowPresenterForename:
          type: string
        ShowPresenterSurname:
          type: string
    ListenAgainShow:
      required:
        - ShowId
        - ShowTitle
      type: object
      properties:
        ShowId:
          $ref: "#/components/schemas/ShowId"
        ShowSlug:
          $ref: "#/components/schemas/ShowSlug"
        ShowActualId:
          type: object
          allOf:
            - $ref: "#/components/schemas/ShowId"
            - type: object
              description: "todo: How is this different from ShowId?"
        ShowTitle:
          $ref: "#/components/schemas/ShowTitle"
        ShowDescription:
          $ref: "#/components/schemas/ShowDescription"
        ShowImageUrl:
          $ref: "#/components/schemas/ImageUrl"
        ShowWideImageUrl:
          $ref: "#/components/schemas/ImageUrl"
        ShowMediumImageUrl:
          $ref: "#/components/schemas/ImageUrl"
        ShowLargeImageUrl:
          $ref: "#/components/schemas/ImageUrl"
        ShowEmail:
          type: string
          format: email
        ShowUrl:
          type: string
          format: uri
        ShowPodcastChannel:
          $ref: "#/components/schemas/PodcastChannelSlug"
        ShowPodcastChannelUrl:
          $ref: "#/components/schemas/PageUrl"
        ShowPodcastChannelImage:
          $ref: "#/components/schemas/ImageUrl"
        ShowPresenters:
          $ref: "#/components/schemas/ListenAgainShowPresenter"
        ShowExpiresAt:
          $ref: "#/components/schemas/DateTime"
        StationCode:
          $ref: "#/components/schemas/StationCode"
    ListenAgain:
      required:
        - ShowId
        - ShowSlug
      type: object
      properties:
        ScheduleId:
          $ref: "#/components/schemas/ScheduleId"
        ShowId:
          $ref: "#/components/schemas/ShowId"
        ShowSlug:
          $ref: "#/components/schemas/ShowSlug"
        ScheduleStart:
          type: object
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - type: object
              description: When the episode first airs
        ScheduleDescription:
          type: string
          description: A short summary description the listen again episode
          example: Can you guess the mystery year?
        ScheduleTitle:
          type: string
          description: The title of the listen again episode
        ScheduleWebsite:
          $ref: "#/components/schemas/PageUrl"
        ScheduleListenAgainROMP:
          type: number
        ScheduleSmartLink:
          $ref: "#/components/schemas/ShuttleUrl"
        ScheduleDuration:
          type: object
          allOf:
            - $ref: "#/components/schemas/DurationInSeconds"
            - type: object
              description: "How length of the episode, in seconds"
        SchedulePlaylist:
          type: string
        ScheduleImageUrl:
          $ref: "#/components/schemas/ImageUrl"
        ScheduleWideImageUrl:
          $ref: "#/components/schemas/ImageUrl"
        ScheduleLargeImageUrl:
          $ref: "#/components/schemas/ImageUrl"
        ConfigListenAgainUrl:
          $ref: "#/components/schemas/PageUrl"
        ConfigRadioplayerUrl:
          type: string
          format: uri
        mediaUrl:
          type: string
          format: uri
        ScheduleStationCode:
          $ref: "#/components/schemas/StationCode"
        ScheduleExpiresAt:
          type: object
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - type: object
              description: When the episode is/was due to be hidden
      description: A single episode from a radio show
    ListenXml:
      type: object
      properties:
        success:
          type: integer
      xml:
        name: listen
    Network:
      type: object
      properties:
        StationNetworkId:
          type: number
        StationNetworkName:
          type: string
    NowPlayingReduced:
      type: object
      properties:
        track:
          type: string
          example: Do You Really Want To Hurt Me
        artist:
          type: string
          example: Culture Club
        time:
          type: string
          description: time in milliseconds since the epoch
          example: "1604506202000"
    NowPlayingSimple:
      required:
        - nowPlayingAppleMusicUrl
        - nowPlayingArtist
        - nowPlayingDuration
        - nowPlayingImage
        - nowPlayingSmallImage
        - nowPlayingTime
        - nowPlayingTrack
        - nowPlayingTrackId
      type: object
      properties:
        nowPlayingTrackId:
          type: integer
          description: Unique identifier for a track
          example: 2819
        nowPlayingTrack:
          type: string
          example: Do You Really Want To Hurt Me
        nowPlayingArtist:
          type: string
          example: Culture Club
        nowPlayingImage:
          type: string
          example: https://assets.planetradio.co.uk/artist/1-1/320x320/272.jpg?ver=1465083329
        nowPlayingSmallImage:
          type: string
          example: https://assets.planetradio.co.uk/artist/1-1/160x160/272.jpg?ver=1465083329
        nowPlayingTime:
          $ref: "#/components/schemas/DateTime"
        nowPlayingDuration:
          type: object
          allOf:
            - $ref: "#/components/schemas/DurationInSeconds"
            - type: object
              description: "How length of now playing track, in seconds"
        nowPlayingAppleMusicUrl:
          type: string
          description: Long-deprecated. This is will probably be null.
          format: uri
          nullable: true
          example: "null"
    NowPlaying:
      type: object
      properties:
        EventId:
          type: integer
        EventStart:
          type: string
        EventService:
          type: integer
        EventFinish:
          type: string
        EventType:
          type: string
        EventMaestroContent:
          type: string
        EventTrackId:
          type: integer
        EventNewTrackId:
          type: integer
        TrackId:
          type: integer
        TrackTitle:
          type: string
        TrackDuration:
          type: object
          allOf:
            - $ref: "#/components/schemas/DurationInSeconds"
            - type: object
              description: "How duration of the track, in seconds"
        TrackImageAvailable:
          type: integer
        TrackImageUpdatedDate:
          type: string
        TrackAppleMusicCollectionId:
          type: integer
        TrackAppleMusicTrackId:
          type: integer
        ArtistName:
          type: string
        ArtistId:
          type: integer
        ArtistImageAvailable:
          type: integer
        ArtistImageUpdatedDate:
          type: string
        TrackAppleMusicUrl:
          type: string
          format: uri
        ImageUrl:
          type: string
          format: uri
        ImageUrlSmall:
          type: string
          format: uri
        ArtistImageUrl:
          type: string
          format: uri
      description:
        "Mutated event, refers only to actively playing content. Raw in-comparison\
        \ to \"NowPlayingSimplified\""
    PodcastChannelRegion:
      required:
        - PodcastChannelAdswizzAdServerUrl
        - PodcastChannelApplePodcastUrl
        - PodcastChannelDeleted
        - PodcastChannelDescription
        - PodcastChannelEpisodeType
        - PodcastChannelExplicit
        - PodcastChannelExtRSSUrl
        - PodcastChannelFeatured
        - PodcastChannelGenre
        - PodcastChannelGooglePodcastUrl
        - PodcastChannelHeroImageUrl
        - PodcastChannelHeroWideImageUrl
        - PodcastChannelId
        - PodcastChannelImageUrl
        - PodcastChannelItunesUrl
        - PodcastChannelKeywords
        - PodcastChannelLatestEpisode
        - PodcastChannelOvercastUrl
        - PodcastChannelRadioplayId
        - PodcastChannelRegion
        - PodcastChannelSlug
        - PodcastChannelStitcherUrl
        - PodcastChannelSubgenre
        - PodcastChannelSubtitle
        - PodcastChannelTags
        - PodcastChannelTitle
        - PodcastChannelWebAdZoneId
        - PodcastChannelWideImageUrl
        - StationId
        - StationIds
        - StationNielsenVcid
      type: object
      properties:
        PodcastChannelId:
          $ref: "#/components/schemas/PodcastChannelId"
        StationId:
          $ref: "#/components/schemas/StationId"
        PodcastChannelRegion:
          $ref: "#/components/schemas/RegionCode"
        PodcastChannelTitle:
          type: string
          example: The Dave Berry Breakfast Show
        PodcastChannelImageUrl:
          $ref: "#/components/schemas/PodcastChannelImageUrl"
        PodcastChannelWideImageUrl:
          $ref: "#/components/schemas/PodcastChannelWideImageUrl"
        PodcastChannelDescription:
          type: string
          example:
            "Big gigs, great guests and loads more - The Dave Berry Breakfast\
            \ Show on Absolute Radio, weekdays from 6am."
        PodcastChannelGenre:
          type: number
        PodcastChannelSubgenre:
          type: number
        PodcastChannelExplicit:
          type: number
        PodcastChannelSubtitle:
          type: string
        PodcastChannelKeywords:
          type: string
        PodcastChannelDeleted:
          pattern: "^\\d{4}-\\d{2}-\\d{2}\\s\\d{2}:\\d{2}:\\d{2}$"
          type: string
        PodcastChannelHeroImageUrl:
          $ref: "#/components/schemas/PodcastChannelHeroImageUrl"
        PodcastChannelRadioplayId:
          type: number
        PodcastChannelExtRSSUrl:
          type: string
          format: uri
        PodcastChannelSlug:
          type: string
          example: podcast-channel-slug
        PodcastChannelHeroWideImageUrl:
          $ref: "#/components/schemas/PodcastChannelHeroWideImageUrl"
        PodcastChannelItunesUrl:
          type: string
          format: uri
        PodcastChannelFeatured:
          $ref: "#/components/schemas/NumericBoolean"
        PodcastChannelEpisodeType:
          type: string
          enum:
            - episodic
            - serial
        PodcastChannelAdswizzAdServerUrl:
          type: string
          format: uri
        PodcastChannelWebAdZoneId:
          type: string
        StationNielsenVcid:
          $ref: "#/components/schemas/NielsenVcid"
        PodcastChannelTags:
          type: string
        PodcastChannelStitcherUrl:
          type: string
          format: uri
        PodcastChannelOvercastUrl:
          type: string
          format: uri
        PodcastChannelApplePodcastUrl:
          type: string
          format: uri
        PodcastChannelGooglePodcastUrl:
          type: string
          format: uri
        PodcastChannelLatestEpisode:
          $ref: "#/components/schemas/PodcastEpisode"
        StationIds:
          type: array
          items:
            type: number
    PodcastChannel:
      required:
        - PodcastChannelAdswizzAdServerUrl
        - PodcastChannelApplePodcastUrl
        - PodcastChannelDeleted
        - PodcastChannelDescription
        - PodcastChannelExplicit
        - PodcastChannelFeatured
        - PodcastChannelGenre
        - PodcastChannelGooglePodcastUrl
        - PodcastChannelHeroImageUrl
        - PodcastChannelHeroWideImageUrl
        - PodcastChannelId
        - PodcastChannelImageUrl
        - PodcastChannelItunesUrl
        - PodcastChannelKeywords
        - PodcastChannelOvercastUrl
        - PodcastChannelPodplayUrl
        - PodcastChannelRadioplayId
        - PodcastChannelRegion
        - PodcastChannelSlug
        - PodcastChannelStitcherUrl
        - PodcastChannelSubgenre
        - PodcastChannelSubtitle
        - PodcastChannelTags
        - PodcastChannelTitle
        - PodcastChannelWebAdZoneId
        - PodcastChannelWideImageUrl
        - StationCodes
        - StationId
        - StationIds
      type: object
      properties:
        PodcastChannelStitcherUrl:
          type: object
          allOf:
            - $ref: "#/components/schemas/PageUrl"
            - type: string
              example: https://www.stitcher.com/podcast/the-empire-film-podcast
        PodcastChannelFeatured:
          type: object
          allOf:
            - $ref: "#/components/schemas/NumericBoolean"
            - type: object
              description: Whether the podcast channel is featured
        PodcastChannelKeywords:
          type: array
          description: List of (Apple?) genre tags
          items:
            type: string
        PodcastChannelEpisodeType:
          type: string
          description: Mostly affects the episode sorting algorithm
          enum:
            - serial
            - episodic
        PodcastChannelGenre:
          type: number
          x-deprecated: true
        PodcastChannelRadioplayId:
          type: number
          description:
            "Unique identifier for the Radioplay service (Note: Not radioplayer,\
            \ that is different)"
          example: 1000586.0
        PodcastChannelItunesUrl:
          $ref: "#/components/schemas/PageUrl"
        PodcastChannelHeroImageUrl:
          type: object
          allOf:
            - $ref: "#/components/schemas/ImageUrl"
            - type: string
              example: https://planet-radio-studio-podplay.imgix.net/img/dd5229c235b441e81487edfc2da09953?auto=compress
        PodcastChannelTags:
          type: array
          description: "List of genres, unknown origin"
          example:
            - Comedy
            - Music
          items:
            type: string
        PodcastChannelImageUrl:
          $ref: "#/components/schemas/ImageUrl"
        PodcastChannelWebAdZoneId:
          type: string
        PodcastChannelId:
          $ref: "#/components/schemas/PodcastChannelId"
        PodcastChannelDeleted:
          $ref: "#/components/schemas/DateTime"
        PodcastChannelApplePodcastUrl:
          $ref: "#/components/schemas/PageUrl"
        PodcastChannelAdswizzAdServerUrl:
          type: string
          format: uri
        PodcastChannelTitle:
          type: string
        PodcastChannelGooglePodcastUrl:
          $ref: "#/components/schemas/PageUrl"
        StationId:
          $ref: "#/components/schemas/StationId"
        StationCode:
          $ref: "#/components/schemas/StationCode"
        PodcastChannelWideImageUrl:
          type: object
          allOf:
            - $ref: "#/components/schemas/ImageUrl"
            - type: string
              example: https://planet-radio-studio-podplay.imgix.net/img/4dde02ecc65239e56e6a92b16e0cc82d?auto=compress
        PodcastChannelOvercastUrl:
          type: string
          format: uri
        PodcastChannelExplicit:
          $ref: "#/components/schemas/NumericBoolean"
        StationNielsenVcid:
          $ref: "#/components/schemas/NielsenVcid"
        PodcastChannelExtRSSUrl:
          $ref: "#/components/schemas/ApiUrl"
        PodcastChannelSubgenre:
          type: number
          example: 0.0
        PodcastChannelDescription:
          type: string
          example:
            "Matt Forde and Matt Dyson bring you all the action from Saturday\
            \ afternoon's football. If by action you mean mucking about, making fun\
            \ of footballers and generally not knowing what's going on, then this\
            \ is the show for you."
        PodcastChannelSubtitle:
          type: string
        PodcastChannelHeroWideImageUrl:
          $ref: "#/components/schemas/PodcastChannelHeroWideImageUrl"
        PodcastChannelRegion:
          $ref: "#/components/schemas/RegionCode"
        PodcastChannelSlug:
          $ref: "#/components/schemas/PodcastChannelSlug"
        StationIds:
          type: array
          items:
            $ref: "#/components/schemas/StationId"
        StationCodes:
          type: array
          items:
            $ref: "#/components/schemas/StationCode"
        PodcastChannelPodplayUrl:
          type: string
          format: uri
    PodcastEpisode:
      required:
        - PodcastChannelId
        - PodcastChannelSlug
        - PodcastChannelTitle
        - PodcastCreationDate
        - PodcastDescription
        - PodcastDuration
        - PodcastEpisodeNumber
        - PodcastExpiry
        - PodcastExplicit
        - PodcastExtMediaUrl
        - PodcastFacebookOgImageUrl
        - PodcastId
        - PodcastImageUrl
        - PodcastKeywords
        - PodcastMimeType
        - PodcastPublishDate
        - PodcastRadioplayId
        - PodcastSeasonNumber
        - PodcastSmartLink
        - PodcastStationCode
        - PodcastSubtitle
        - PodcastTitle
        - PodcastWideImageUrl
        - StationNielsenVcid
      type: object
      properties:
        PodcastId:
          $ref: "#/components/schemas/PodcastId"
        PodcastChannelId:
          $ref: "#/components/schemas/PodcastChannelId"
        PodcastTitle:
          type: string
        PodcastDescription:
          type: string
        PodcastKeywords:
          type: string
        PodcastCreationDate:
          $ref: "#/components/schemas/DateTime"
        PodcastUpdatedAt:
          $ref: "#/components/schemas/DateTime"
        PodcastDeletedAt:
          $ref: "#/components/schemas/DateTime"
        PodcastSubtitle:
          type: string
        PodcastImageUrl:
          $ref: "#/components/schemas/ImageUrl"
        PodcastWideImageUrl:
          $ref: "#/components/schemas/ImageUrl"
        PodcastPublishDate:
          $ref: "#/components/schemas/DateTime"
        PodcastExplicit:
          $ref: "#/components/schemas/NumericBoolean"
        PodcastDuration:
          type: object
          allOf:
            - $ref: "#/components/schemas/DurationInSeconds"
            - type: object
              description: "How duration of the podcast, in seconds"
        PodcastExtMediaUrl:
          type: string
          format: uri
        PodcastFacebookOgImageUrl:
          $ref: "#/components/schemas/ImageUrl"
        PodcastExpiry:
          $ref: "#/components/schemas/DateTime"
        PodcastMimeType:
          type: string
        PodcastRadioplayId:
          type: number
        PodcastSmartLink:
          $ref: "#/components/schemas/ShuttleUrl"
        PodcastEpisodeNumber:
          type: number
        PodcastSeasonNumber:
          type: number
        StationNielsenVcid:
          $ref: "#/components/schemas/NielsenVcid"
        PodcastStationCode:
          $ref: "#/components/schemas/StationCode"
        PodcastChannelTitle:
          type: string
        PodcastChannelSlug:
          type: string
          description: The unique identifier of the episode's channel
          example: pop-fm-moder
    PodcastChannelEpisodes:
      required:
        - channel
        - episodes
      type: object
      properties:
        channel:
          $ref: "#/components/schemas/PodcastChannel"
        episodes:
          type: array
          items:
            $ref: "#/components/schemas/PodcastEpisode"
      additionalProperties: true
    Premium:
      type: object
      properties:
        PremiumId:
          $ref: "#/components/schemas/PremiumId"
        PremiumHeader:
          type: string
          description: Header text for premium section
        PremiumHeaderGeneric:
          type: string
          description: Generic header text
        PremiumHeaderStations:
          type: string
          description: Stations' header text
        PremiumHeaderShows:
          type: string
          description: Shows' header text
        PremiumHeaderSkip:
          type: string
          description: Skips' header text
        PremiumHeaderDownload:
          type: string
          description: Download header text
        PremiumBenefit1:
          type: string
        PremiumBenefit2:
          type: string
        PremiumBenefit3:
          type: string
        PremiumBenefit4:
          type: string
        PremiumBenefit5:
          type: string
        PremiumButtonTrial:
          type: string
          description: Trial button text
        PremiumButtonActivate:
          type: string
          description: Activation button text
        PremiumButtonDismiss:
          type: string
          description: Dismiss button text
        PremiumBannerButton:
          type: string
          description: Banner section button text
        PremiumBannerDescription:
          type: string
          description: Banner section description
        PremiumFooter:
          type: string
          description: Button support text
        PremiumPrice:
          type: string
          description: "Premiums price, formatted"
        AdFreeHeader:
          type: string
          description: Header text for the ad free section
          example: No more banners
        AdFreeDescription:
          type: string
          description: Description for the ad free section
          example: Because you're worth it
        AdFreeImageUrl:
          type: string
          description: Image for the ad free section
          example: https://example.com/foo.jpg
        SkipHeader:
          type: string
          description: Header for the skip section
          example: Skip things
        SkipDescription:
          type: string
          description: Description for the skip section
          example: Do you like skips?
        SkipImageUrl:
          type: string
          description: Image URL for the skip image
          example: https://example.com/foo.jpg
        StationsTitle:
          type: string
          description: Title for the stations section
          example: Premium stations
        ShowsTitle:
          type: string
          description: Title for the shows section
          example: Premium shows
        PremiumConversionHeroImageUrl:
          type: object
          allOf:
            - $ref: "#/components/schemas/ImageUrl"
            - maxLength: 255
              type: string
              description: Image URL for Premium Conversion Hero
              example: https://example.com/PremiumConversionHeroImageUrl.jpg
        PremiumConversionTitle:
          maxLength: 255
          type: string
          description: Title for Premium Conversion
          example: Get Premium!
        PremiumConversionBenefit1ImageUrl:
          type: object
          allOf:
            - $ref: "#/components/schemas/ImageUrl"
            - maxLength: 255
              type: string
              description: Image URL for first benefit of premium
              example: https://example.com/PremiumConversionBenefit1ImageUrl.jpg
        PremiumConversionBenefit1Title:
          maxLength: 255
          type: string
          description: Title of first benefit of Premium
          example: Ad-free Radio
        PremiumConversionBenefit1Description:
          maxLength: 255
          type: string
          description: Description of first benefit of Premium
          example: Listen to live radio uninterrupted
        PremiumConversionBenefit2ImageUrl:
          type: object
          allOf:
            - $ref: "#/components/schemas/ImageUrl"
            - maxLength: 255
              type: string
              description: Image URL for second benefit of premium
              example: https://example.com/PremiumConversionBenefit2ImageUrl.jpg
        PremiumConversionBenefit2Title:
          maxLength: 255
          type: string
          description: Title of second benefit of Premium
          example: Skip Songs
        PremiumConversionBenefit2Description:
          maxLength: 255
          type: string
          description: Description of second benefit of Premium
          example: Skip up to 6 per hour
        PremiumConversionBenefit3ImageUrl:
          type: object
          allOf:
            - $ref: "#/components/schemas/ImageUrl"
            - maxLength: 255
              type: string
              description: Image URL for third benefit of premium
              example: https://example.com/PremiumConversionBenefit3ImageUrl.jpg
        PremiumConversionBenefit3Title:
          maxLength: 255
          type: string
          description: Title of third benefit of Premium
          example: Exclusive songs
        PremiumConversionBenefit3Description:
          maxLength: 255
          type: string
          description: Description of third benefit of Premium
          example: Access to high quality content
        PremiumConversionBenefit4ImageUrl:
          type: object
          allOf:
            - $ref: "#/components/schemas/ImageUrl"
            - maxLength: 255
              type: string
              description: Image URL for fourth benefit of premium
              example: https://example.com/PremiumConversionBenefit4ImageUrl.jpg
        PremiumConversionBenefit4Title:
          maxLength: 255
          type: string
          description: Title of fourth benefit of Premium
          example: Exclusive stations
        PremiumConversionBenefit4Description:
          maxLength: 255
          type: string
          description: Description of fourth benefit of Premium
          example: Access to unique stations
        PremiumConversionBenefit5ImageUrl:
          type: object
          allOf:
            - $ref: "#/components/schemas/ImageUrl"
            - maxLength: 255
              type: string
              description: Image URL for fifth benefit of premium
              example: https://example.com/PremiumConversionBenefit5ImageUrl.jpg
        PremiumConversionBenefit5Title:
          maxLength: 255
          type: string
          description: Title of fifth benefit of Premium
          example: Access to premium on other devices
        PremiumConversionBenefit5Description:
          maxLength: 255
          type: string
          description: Description of fifth benefit of Premium
          example: Get premium anywhere
        PremiumConversionBenefit6ImageUrl:
          type: object
          allOf:
            - $ref: "#/components/schemas/ImageUrl"
            - maxLength: 255
              type: string
              description: Image URL for sixth benefit of premium
              example: https://example.com/PremiumConversionBenefit6ImageUrl.jpg
        PremiumConversionBenefit6Title:
          maxLength: 255
          type: string
          description: Title of sixth benefit of Premium
          example: And another thing
        PremiumConversionBenefit6Description:
          maxLength: 255
          type: string
          description: Description of sixth benefit of Premium
          example: This is a sixth benefit
        PremiumMultiOfferTrialUsedText:
          maxLength: 255
          type: string
          description: Text if user has used their trial period
          example: You are not eligible
        PremiumMultiOfferTrialNotUsedText:
          maxLength: 255
          type: string
          description: Text if use has not used their trial period
          example: You are eligible for a free trial
        PremiumConfirmationTitle:
          maxLength: 255
          type: string
          description: Title to confirm subscription
          example: Subscription Successful
        PremiumConfirmationDescription:
          maxLength: 255
          type: string
          description: Description confirming subscription
          example: You have successfully subscribed
        PremiumConfirmationButtonText:
          maxLength: 255
          type: string
          description: Button text for premium confirmation
          example: Confirm
        PremiumConversionButtonTrialText:
          maxLength: 255
          type: string
          description: Button text for premium trial
          example: Trial
        PremiumConversionButtonActivationText:
          maxLength: 255
          type: string
          description: Button text for premium activation
          example: Activate
        PremiumConversionButtonDismissText:
          maxLength: 255
          type: string
          description: Button text for dismiss
          example: Dismiss
        PremiumConversionButtonSupportText:
          maxLength: 255
          type: string
          description: Button text for premium support
          example: Support
      description: Premium page content markers
    Presenter:
      required:
        - biography
        - deleted
        - effective
        - email
        - firstEffective
        - forename
        - id
        - imageAlt
        - imageCaption
        - imageCredit
        - imagePortrait
        - imageSquare
        - imageWide
        - latestId
        - metaDescription
        - metaTitle
        - presenterId
        - presenterStationId
        - record
        - region
        - reverted
        - shows
        - slug
        - starred
        - stationId
        - status
        - summary
        - surname
        - tagline
        - twitter
        - username
      type: object
      properties:
        id:
          type: integer
        presenterId:
          type: integer
        effective:
          type: string
        forename:
          type: string
        surname:
          type: string
        tagline:
          type: string
        summary:
          type: string
        biography:
          type: string
        username:
          type: string
        record:
          type: string
        reverted:
          type: string
        email:
          type: string
          format: email
        twitter:
          type: string
        slug:
          type: string
        metaTitle:
          type: string
        metaDescription:
          type: string
        status:
          type: string
        region:
          $ref: "#/components/schemas/RegionCode"
        imageSquare:
          $ref: "#/components/schemas/ImageUrl"
        imagePortrait:
          $ref: "#/components/schemas/ImageUrl"
        imageWide:
          $ref: "#/components/schemas/ImageUrl"
        imageAlt:
          type: string
        imageCaption:
          type: string
        imageCredit:
          type: string
        latestId:
          type: integer
        firstEffective:
          type: string
        deleted:
          $ref: "#/components/schemas/DateTime"
        presenterStationId:
          $ref: "#/components/schemas/StationId"
        starred:
          type: integer
        stationId:
          type: array
          items:
            $ref: "#/components/schemas/StationId"
        shows:
          type: array
          items:
            $ref: "#/components/schemas/PresenterShow"
    PresenterShow:
      required:
        - imageSquare
        - showId
        - slug
        - title
      type: object
      properties:
        showId:
          $ref: "#/components/schemas/ShowId"
        title:
          type: string
        imageSquare:
          $ref: "#/components/schemas/ImageUrl"
        slug:
          $ref: "#/components/schemas/ShowSlug"
    RegionFeed:
      type: object
      properties:
        "@content":
          type: string
        "@type":
          type: string
        "@id":
          type: string
        url:
          type: string
          format: uri
        name:
          type: string
        broadcastDisplayName:
          type: string
        callSign:
          type: string
        description:
          type: string
        areaServed:
          $ref: "#/components/schemas/BroadcastArea"
        potentialAction:
          $ref: "#/components/schemas/PotentialAction"
        slogan:
          type: string
        broadcaster:
          type: array
          items:
            $ref: "#/components/schemas/Broadcaster"
        logo:
          $ref: "#/components/schemas/RegionFeedLogo"
        sameAs:
          type: string
        broadcastFrequency:
          type: array
          items:
            $ref: "#/components/schemas/BroadcastFrequency"
    RegionsMeta:
      required:
        - "@context"
        - "@type"
        - dataFeedElement
        - dateModified
      type: object
      properties:
        "@context":
          type: string
        "@type":
          type: string
        dateModified:
          $ref: "#/components/schemas/DateTime"
        dataFeedElement:
          type: array
          items:
            $ref: "#/components/schemas/RegionFeed"
    Region:
      type: object
      properties:
        StationRegionId:
          $ref: "#/components/schemas/RegionId"
        StationRegionCode:
          $ref: "#/components/schemas/RegionCode"
        StationRegionName:
          type: string
        StationRegionTimezone:
          type: string
        StationRegionLanguage:
          type: string
        StationRegionDefaultAppId:
          $ref: "#/components/schemas/AppId"
    Schedule:
      type: object
      properties:
        episodeid:
          $ref: "#/components/schemas/ScheduleId"
        showid:
          $ref: "#/components/schemas/ShowId"
        start:
          type: string
        title:
          type: string
        shortdesc:
          type: string
        duration:
          type: object
          allOf:
            - $ref: "#/components/schemas/DurationInSeconds"
            - type: object
              description: "How duration of the schedule, in seconds"
        image_url:
          $ref: "#/components/schemas/ImageUrl"
        url:
          $ref: "#/components/schemas/ImageUrl"
        record:
          type: number
        is_skippable:
          type: boolean
          description: Hint at whether the client is capable of skipping this episode
    SearchAppBrandStationCodes:
      type: object
      properties:
        AppCodes:
          type: array
          items:
            $ref: "#/components/schemas/AppCode"
        StationCodes:
          type: array
          items:
            $ref: "#/components/schemas/StationCode"
        BrandCodes:
          type: array
          items:
            $ref: "#/components/schemas/BrandCode"
    SearchBoxSetEpisodeExtra:
      type: object
      properties:
        UpdatedAt:
          $ref: "#/components/schemas/DateTime"
        BoxSetEpisodeDeletedAt:
          $ref: "#/components/schemas/DateTime"
        BoxSetTitle:
          $ref: "#/components/schemas/BoxSetTitle"
        BoxSetSubtitle:
          type: string
    SearchBoxSetEpisode:
      allOf:
        - $ref: "#/components/schemas/BoxSetEpisode"
        - $ref: "#/components/schemas/SearchBoxSetEpisodeExtra"
        - $ref: "#/components/schemas/SearchAppBrandStationCodes"
    SearchBoxSetExtra:
      type: object
      properties:
        BoxSetDeleted:
          $ref: "#/components/schemas/DateTime"
    SearchBoxSet:
      allOf:
        - $ref: "#/components/schemas/BoxSet"
        - $ref: "#/components/schemas/SearchBoxSetExtra"
        - $ref: "#/components/schemas/SearchAppBrandStationCodes"
    SearchListenAgainEpisodeExtra:
      required:
        - expiresAt
        - updatedAt
      type: object
      properties:
        updatedAt:
          $ref: "#/components/schemas/DateTime"
        expiresAt:
          $ref: "#/components/schemas/DateTime"
    SearchListenAgainEpisode:
      allOf:
        - $ref: "#/components/schemas/ListenAgainEpisode"
        - $ref: "#/components/schemas/SearchListenAgainEpisodeExtra"
        - $ref: "#/components/schemas/SearchAppBrandStationCodes"
    SearchListenAgainExtra:
      required:
        - ShowTitle
      type: object
      properties:
        ShowTitle:
          $ref: "#/components/schemas/ShowTitle"
        ShowDescription:
          $ref: "#/components/schemas/ShowDescription"
        ShowUpdatedAt:
          $ref: "#/components/schemas/DateTime"
        ShowDeletedAt:
          $ref: "#/components/schemas/DateTime"
        ShowImageUrl:
          $ref: "#/components/schemas/ImageUrl"
        StationId:
          $ref: "#/components/schemas/StationId"
        StationName:
          $ref: "#/components/schemas/StationName"
        presenters:
          type: array
          items:
            type: string
    SearchListenAgain:
      allOf:
        - $ref: "#/components/schemas/ListenAgain"
        - $ref: "#/components/schemas/SearchListenAgainExtra"
        - $ref: "#/components/schemas/SearchAppBrandStationCodes"
    SearchPodcastEpisodeExtra:
      type: object
      properties:
        PodcastChannelTitle:
          type: string
        PodcastChannelKeywords:
          type: string
        PodcastChannelDescription:
          type: string
        PodcastUpdatedAt:
          $ref: "#/components/schemas/DateTime"
        PodcastDeletedAt:
          $ref: "#/components/schemas/DateTime"
    SearchPodcastEpisode:
      allOf:
        - $ref: "#/components/schemas/PodcastEpisode"
        - $ref: "#/components/schemas/SearchPodcastEpisodeExtra"
        - $ref: "#/components/schemas/SearchAppBrandStationCodes"
    SearchPodcastShowExtra:
      type: object
      properties:
        UpdatedAt:
          $ref: "#/components/schemas/DateTime"
    SearchPodcastShow:
      allOf:
        - $ref: "#/components/schemas/PodcastChannelRegion"
        - $ref: "#/components/schemas/SearchPodcastShowExtra"
        - $ref: "#/components/schemas/SearchAppBrandStationCodes"
    SearchPresenter:
      allOf:
        - $ref: "#/components/schemas/Presenter"
        - $ref: "#/components/schemas/SearchAppBrandStationCodes"
    ShowTypes:
      type: string
      description: The different types of "show" collections (Not listen again shows)
      enum:
        - podcast
        - boxset
        - listenagain_show
    ShowBase:
      required:
        - app_url
        - id
        - is_downloadable
        - is_featured
        - is_premium_only
        - last_episode_published_at
        - num_audibles
        - shuttle_url
        - title
        - type
        - url
      type: object
      properties:
        id:
          $ref: "#/components/schemas/ShowOrAudibleId"
        type:
          $ref: "#/components/schemas/ShowTypes"
        title:
          type: string
          example: Generic Show Title
        url:
          $ref: "#/components/schemas/PageUrl"
        app_url:
          $ref: "#/components/schemas/AppUrl"
        shuttle_url:
          $ref: "#/components/schemas/ShuttleUrl"
        is_featured:
          type: boolean
          description: Whether the show is featured (more visible)
        is_downloadable:
          type: boolean
          description: Whether the episodes of the show should be downloadable
        is_premium_only:
          type: boolean
          description: Whether the show is intended only for premium users
        last_episode_published_at:
          type: object
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - type: object
              description: The time the most recent audible was published
        num_audibles:
          type: number
          description: The number of audibles this Show collection contains
    Show:
      allOf:
        - $ref: "#/components/schemas/ShowBase"
        - $ref: "#/components/schemas/EmbeddedPodcastShow"
        - $ref: "#/components/schemas/EmbeddedBoxSet"
        - $ref: "#/components/schemas/EmbeddedListenAgainShow"
    ShuttleLinkBody:
      required:
        - android_url
        - description
        - desktop_url
        - image_url
        - ios_url
        - slug
        - title
      type: object
      properties:
        id:
          type: integer
        application_id:
          type: object
          allOf:
            - $ref: "#/components/schemas/AppId"
            - type: object
              description: The App that the shuttle link belongs to
        title:
          type: string
        description:
          type: string
        image_url:
          $ref: "#/components/schemas/ImageUrl"
        ios_url:
          $ref: "#/components/schemas/AppUrl"
        android_url:
          $ref: "#/components/schemas/AppUrl"
        desktop_url:
          $ref: "#/components/schemas/PageUrl"
        slug:
          type: string
    ShuttleLinkEntityTypeBody:
      required:
        - application_id
        - description
        - entity_id
        - image_url
        - slug
        - station_id
        - title
      type: object
      properties:
        id:
          type: integer
        application_id:
          type: integer
        title:
          type: string
        description:
          type: string
        image_url:
          $ref: "#/components/schemas/ImageUrl"
        slug:
          type: string
        region_id:
          $ref: "#/components/schemas/RegionId"
        station_id:
          $ref: "#/components/schemas/StationId"
        entity_id:
          type: integer
    ShuttleLink:
      required:
        - android_url
        - description
        - desktop_url
        - id
        - image_url
        - ios_url
        - slug
        - title
        - url
      type: object
      properties:
        id:
          type: integer
        application_id:
          type: integer
        title:
          type: string
        description:
          type: string
        image_url:
          $ref: "#/components/schemas/ImageUrl"
        ios_url:
          $ref: "#/components/schemas/AppUrl"
        android_url:
          $ref: "#/components/schemas/AppUrl"
        desktop_url:
          $ref: "#/components/schemas/PageUrl"
        slug:
          type: string
        url:
          $ref: "#/components/schemas/ShuttleUrl"
    SignInIncentive:
      required:
        - SignInIncentiveBenefit1
        - SignInIncentiveBenefit2
        - SignInIncentiveBenefit3
        - SignInIncentiveBenefit4
        - SignInIncentiveBenefit5
        - SignInIncentiveBenefit6
        - SignInIncentiveBenefitHeader1
        - SignInIncentiveBenefitHeader2
        - SignInIncentiveBenefitHeader3
        - SignInIncentiveBenefitHeader4
        - SignInIncentiveBenefitHeader5
        - SignInIncentiveBenefitHeader6
        - SignInIncentiveHeader
        - SignInIncentiveId
        - SignInIncentiveImage
        - SignInIncentiveMobileImage
        - SignInIncentiveOverview
        - SignInIncentiveTabletImage
        - SignInIncentiveTotalSkips
        - SignInIncentiveWebUrl
      type: object
      properties:
        SignInIncentiveId:
          type: integer
          description: Unique identifier for sign in incentive
        SignInIncentiveHeader:
          type: string
          description: Default Header text
        SignInIncentiveOverview:
          type: string
          description: Default overview text
        SignInIncentiveImage:
          type: object
          allOf:
            - $ref: "#/components/schemas/ImageUrl"
            - type: object
              description: Default web image Url
        SignInIncentiveMobileImage:
          type: object
          allOf:
            - $ref: "#/components/schemas/ImageUrl"
            - type: object
              description: Default mobile image url
        SignInIncentiveTabletImage:
          type: object
          allOf:
            - $ref: "#/components/schemas/ImageUrl"
            - type: object
              description: Default tablet image url
        SignInIncentiveBenefitHeader1:
          type: string
          description: Benefit Header 1 text
        SignInIncentiveBenefitHeader2:
          type: string
          description: Benefit Header 2 text
        SignInIncentiveBenefitHeader3:
          type: string
          description: Benefit Header 3 text
        SignInIncentiveBenefitHeader4:
          type: string
          description: Benefit Header 4 text
        SignInIncentiveBenefitHeader5:
          type: string
          description: Benefit Header 5 text
        SignInIncentiveBenefitHeader6:
          type: string
          description: Benefit Header 6 text
        SignInIncentiveBenefit1:
          type: string
          description: Benefit 1 text
        SignInIncentiveBenefit2:
          type: string
          description: Benefit 2 text
        SignInIncentiveBenefit3:
          type: string
          description: Benefit 3 text
        SignInIncentiveBenefit4:
          type: string
          description: Benefit 4 text
        SignInIncentiveBenefit5:
          type: string
          description: Benefit 5 text
        SignInIncentiveBenefit6:
          type: string
          description: Benefit 6 text
        SignInIncentiveWebUrl:
          type: object
          allOf:
            - $ref: "#/components/schemas/PageUrl"
            - type: object
              description: Default web url
        SignInIncentiveTotalSkips:
          type: integer
          description: Number of skips allowed for mandatory login
    StationOnAir:
      required:
        - episodeDescription
        - episodeDuration
        - episodeImageUrl
        - episodeIsSkippable
        - episodeStart
        - episodeTitle
        - showId
      type: object
      properties:
        showId:
          $ref: "#/components/schemas/ShowId"
        episodeTitle:
          type: string
          example: Mark Goodier
        episodeDescription:
          type: string
          example:
            "Mark brings you My Greatest Hit, Their Greatest Hit and the Music\
            \ Jam."
        episodeStart:
          type: string
          example: 2023-01-30 11:00:00
        episodeDuration:
          type: object
          allOf:
            - $ref: "#/components/schemas/DurationInSeconds"
            - type: object
              description: "The duration of the episode, in seconds"
        episodeImageUrl:
          $ref: "#/components/schemas/ImageUrl"
        episodeIsSkippable:
          type: boolean
    StationStream:
      required:
        - streamBitRate
        - streamQuality
        - streamType
        - streamUrl
        - streamUsersOnly
      type: object
      properties:
        streamUrl:
          $ref: "#/components/schemas/StreamUrl"
        streamUsersOnly:
          type: boolean
        streamType:
          type: string
          enum:
            - mp3
            - adts
            - hls
        streamBitRate:
          type: number
        streamQuality:
          type: string
          enum:
            - lq
            - hq
        streamAdswizzEnabled:
          type: boolean
    StationType:
      type: string
      description: 'The type of station, most-use cases will only use "radio"'
      enum:
        - radio
        - box_set
        - tv
    LoginType:
      type: string
      description: Hints at which login flows should be used
      enum:
        - disabled
        - enabled
        - optional
    StationMinified:
      allOf:
        - required:
            - stationBrandCode
            - stationBrandColour
            - stationCode
            - stationDADIChannelId
            - stationId
            - stationListenBarLogo
            - stationName
            - stationNowPlaying
            - stationSmartLink
            - stationStrapline
            - stationType
          type: object
          properties:
            stationId:
              $ref: "#/components/schemas/StationId"
            stationCode:
              $ref: "#/components/schemas/StationCode"
            stationName:
              $ref: "#/components/schemas/StationName"
            stationType:
              $ref: "#/components/schemas/StationType"
            stationBrandCode:
              $ref: "#/components/schemas/BrandCode"
            stationListenBarLogo:
              $ref: "#/components/schemas/ImageUrl"
            stationSmartLink:
              $ref: "#/components/schemas/ShuttleUrl"
            stationBrandColour:
              $ref: "#/components/schemas/HexCodeColor"
            stationStrapline:
              type: string
              example: Real music matters
            stationDADIChannelId:
              type: string
              description: Unique identifier for DADI/Content systems
              example: absolute-radio
            stationNowPlaying:
              type: array
              items:
                $ref: "#/components/schemas/NowPlayingSimple"
            stationOnAir:
              $ref: "#/components/schemas/StationOnAir"
            stationSplits:
              type: array
              description: Split stations
              items:
                $ref: "#/components/schemas/SplitStationMinified"
            stationIsAdswizzEnabled:
              $ref: "#/components/schemas/NumericBoolean"
            stationStreams:
              type: array
              items:
                $ref: "#/components/schemas/StationStream"
            stationNielsenVcid:
              $ref: "#/components/schemas/NielsenVcid"
            stationLoginType:
              $ref: "#/components/schemas/LoginType"
          description: A smaller station DTO that contains only the most essential properties
        - $ref: "#/components/schemas/StationAttributes"
    SplitStationMinified:
      required:
        - stationCode
        - stationId
        - stationName
      type: object
      properties:
        stationId:
          $ref: "#/components/schemas/StationId"
        stationCode:
          $ref: "#/components/schemas/StationCode"
        stationName:
          $ref: "#/components/schemas/StationName"
        webDfpAdPath:
          $ref: "#/components/schemas/DfpAdPath"
      description: Reduced-down split station
    StationBase:
      required:
        - appGoogleBundleId
        - appITunesStoreId
        - brandOrder
        - configBannerAlt
        - configBannerDesktopImageUrl
        - configBannerMobileImageUrl
        - configBannerTarget
        - configStraplineImageUrl
        - stationAdswizzFillerAdvertiserId
        - stationAdswizzFillerZoneId
        - stationAdswizzPublisherId
        - stationAdswizzUrl
        - stationAdswizzZone
        - stationAppCode
        - stationAppId
        - stationAppleMusicEnabled
        - stationBrandCode
        - stationBrandColour
        - stationBrandId
        - stationCode
        - stationContentPriority
        - stationDADIType
        - stationFacebook
        - stationFeedbackEmail
        - stationHeaderLogo
        - stationHeaderLogoSVG
        - stationHeroImage
        - stationHomepage
        - stationId
        - stationInstagram
        - stationIsAdswizzEnabled
        - stationLat
        - stationLockScreenImage
        - stationLon
        - stationMP3Stream
        - stationMobileHeroImage
        - stationNetworkId
        - stationNewsletterCode
        - stationNowPlaying
        - stationOnAir
        - stationOrder
        - stationOrderMode
        - stationPlayHistory
        - stationPlaylistUrl
        - stationPrivacyUrl
        - stationRadioplayerId
        - stationRecommended
        - stationRegion
        - stationServiceId
        - stationSmartLink
        - stationSplitGroup
        - stationSplitGroupId
        - stationStrapline
        - stationStreamDelay
        - stationStreams
        - stationStudioEmail
        - stationTermsUrl
        - stationTwitter
        - stationType
        - stationWelcomeAudioUrl
        - stationWhiteLogoImage
        - stationZettaAdsId
      type: object
      properties:
        stationId:
          $ref: "#/components/schemas/StationId"
        stationCode:
          $ref: "#/components/schemas/StationCode"
        stationName:
          $ref: "#/components/schemas/StationName"
        stationType:
          $ref: "#/components/schemas/StationType"
        stationRegion:
          $ref: "#/components/schemas/RegionCode"
        stationAppId:
          $ref: "#/components/schemas/AppId"
        stationAppCode:
          $ref: "#/components/schemas/AppCode"
        stationBrandCode:
          $ref: "#/components/schemas/BrandCode"
        stationBrandId:
          $ref: "#/components/schemas/BrandId"
        stationNewsletterCode:
          type: string
        stationNetworkId:
          $ref: "#/components/schemas/NetworkId"
        stationOrderMode:
          type: number
          description:
            "Based on the region, hints at how the stations are ordered\
            \ by default by the API"
        stationOrder:
          type: number
          description: "An explicit sorting priority, related to StationOrderMode"
        brandOrder:
          type: number
          description:
            Hints at how the station is to be ordered in relation to the
            brand
        stationRecommended:
          $ref: "#/components/schemas/StringBoolean"
        stationHeaderLogo:
          $ref: "#/components/schemas/StationHeaderLogo"
        stationHeaderLogoSVG:
          $ref: "#/components/schemas/StationHeaderLogoSVG"
        stationListenBarLogo:
          $ref: "#/components/schemas/StationListenBarLogo"
        stationHeroImage:
          $ref: "#/components/schemas/StationHeroImage"
        stationMobileHeroImage:
          $ref: "#/components/schemas/StationMobileHeroImage"
        stationWhiteLogoImage:
          $ref: "#/components/schemas/StationWhiteLogoImage"
        stationLockScreenImage:
          $ref: "#/components/schemas/StationLockScreenImage"
        stationSmartLink:
          $ref: "#/components/schemas/ShuttleUrl"
        stationBrandColour:
          $ref: "#/components/schemas/HexCodeColor"
        stationFacebook:
          type: string
        facebookAppId:
          type: string
        stationTwitter:
          type: string
        stationInstagram:
          type: string
        stationYouTube:
          type: string
        stationStrapline:
          type: string
          example: Real music matters
        configStraplineImageUrl:
          $ref: "#/components/schemas/ImageUrl"
        stationHomepage:
          $ref: "#/components/schemas/PageUrl"
        stationDADIChannelId:
          type: string
          description: Unique identifier for DADI/Content systems
          example: absolute-radio
        stationDADIType:
          type: string
        stationSplitGroup:
          type: string
        stationSplitGroupId:
          type: number
        stationStudioEmail:
          $ref: "#/components/schemas/Email"
        stationPlaylistUrl:
          type: string
          format: uri
        stationLoginMessage:
          type: string
          example: Please login to hear this
        stationPreviewAudioUrl:
          $ref: "#/components/schemas/StreamUrl"
        stationWelcomeAudioUrl:
          $ref: "#/components/schemas/StreamUrl"
        stationNowPlaying:
          $ref: "#/components/schemas/NowPlayingSimple"
        stationPlayHistory:
          type: array
          items:
            $ref: "#/components/schemas/NowPlayingSimple"
        stationOnAir:
          $ref: "#/components/schemas/StationOnAir"
        stationBroadcastMedia:
          type: array
          description: Which services the station broadcasts to
          items:
            $ref: "#/components/schemas/BroadcastMediaTypes"
        stationAACStream:
          $ref: "#/components/schemas/StreamUrl"
        stationMP3Stream:
          $ref: "#/components/schemas/StreamUrl"
        stationLat:
          type: number
        stationLon:
          type: number
        stationPlayerUrl:
          type: object
          allOf:
            - $ref: "#/components/schemas/PageUrl"
            - type: string
              description: Links to a streaming interface on the web client
              example: https://planetradio.co.uk/downtown/player/"
              x-deprecated: true
        stationIsAdswizzEnabled:
          type: boolean
          description: Whether Adswizz integration is enabled
        stationAdswizzZone:
          type: string
        stationAdswizzUrl:
          type: object
          allOf:
            - $ref: "#/components/schemas/ApiUrl"
            - type: string
              example: https://octave.deliveryengine.adswizz.com/www/delivery/afr.php
              x-deprecated: true
        stationAppleMusicEnabled:
          $ref: "#/components/schemas/NumericBoolean"
        stationBearers:
          type: array
          description:
            "Radio terminology, a unique identifier that the station operates\
            \ with"
          example:
            - dab:ce1.c181.c1c0.0
          items:
            type: string
        stationTermsUrl:
          $ref: "#/components/schemas/PageUrl"
        stationPrivacyUrl:
          $ref: "#/components/schemas/PageUrl"
        stationAdswizzPublisherId:
          type: string
        stationAdswizzFillerZoneId:
          type: string
        stationAdswizzFillerAdvertiserId:
          type: string
        stationZettaAdsId:
          type: string
        stationStreams:
          type: array
          items:
            $ref: "#/components/schemas/StationStream"
        stationStreamDelay:
          type: number
          description: "The stream delay for the station, in seconds"
        stationFeedbackEmail:
          $ref: "#/components/schemas/Email"
        appGoogleBundleId:
          type: string
        appITunesStoreId:
          type: string
        stationNielsenVcid:
          $ref: "#/components/schemas/NielsenVcid"
        stationContentPriority:
          type: array
          items:
            $ref: "#/components/schemas/ShowOrAudibleId"
        stationServiceId:
          $ref: "#/components/schemas/StationId"
        stationRadioplayerId:
          type: integer
        configBannerDesktopImageUrl:
          $ref: "#/components/schemas/ImageUrl"
        configBannerMobileImageUrl:
          $ref: "#/components/schemas/ImageUrl"
        configBannerTarget:
          type: string
        configBannerAlt:
          type: string
        configBannerUrl:
          $ref: "#/components/schemas/ImageUrl"
      description: Properties that always belong to a fully inflated station
    StationWithChildren:
      required:
        - stationBrandRelated
        - stationRelated
        - stationSplits
      type: object
      properties:
        stationBrandRelated:
          type: array
          description: "Stations that are related to this station, by brand"
          items:
            $ref: "#/components/schemas/BrandRelatedStation"
        stationRelated:
          type: array
          description: "Stations that are related to this station, in general"
          items:
            $ref: "#/components/schemas/RelatedStation"
        stationSplits:
          type: array
          description: "Stations that are related to this station, in general"
          items:
            $ref: "#/components/schemas/SplitStation"
    StationWithoutChildren:
      required:
        - stationBrandRelated
        - stationRelated
        - stationSplits
      type: object
      properties:
        stationBrandRelated:
          maxItems: 0
          type: array
          description: Empty array
          items:
            type: object
        stationRelated:
          maxItems: 0
          type: array
          description: Empty array
          items:
            type: object
        stationSplits:
          maxItems: 0
          type: array
          description: Empty array
          items:
            type: object
    StationAttributes:
      type: object
      properties:
        heroImageMask:
          type: string
        stationSquareLogo:
          $ref: "#/components/schemas/ImageUrl"
        stationLoginType:
          $ref: "#/components/schemas/LoginType"
        hasSchedule:
          type: string
          description: Whether the station has a schedule
        secondaryColourHex:
          $ref: "#/components/schemas/HexCodeColor"
        radioplayerUrl:
          type: object
          allOf:
            - $ref: "#/components/schemas/PageUrl"
            - type: object
              description: A page that contains the "player" interface
        webWaysToListenIsEnabled:
          $ref: "#/components/schemas/NumericBoolean"
        radioWaysToListenIsEnabled:
          $ref: "#/components/schemas/NumericBoolean"
        mobileWaysToListenIsEnabled:
          $ref: "#/components/schemas/NumericBoolean"
        speakersWaysToListenIsEnabled:
          $ref: "#/components/schemas/NumericBoolean"
        amazonAlexaInvocation:
          type: string
        googleHomeInvocation:
          type: string
        applePodInvocation:
          type: string
        trafficTravelUrl:
          type: object
          allOf:
            - $ref: "#/components/schemas/PageUrl"
            - type: string
              example: https://inrixtravel.inrixmedia.com/WEB/?UserId=7d80e7f5-12a9-4851-b8c3-af65de55d70b&colour=ee7202&IconStyle=1&incidents=true&congestion=true&roadworks=true&events=true
        responsysCode:
          type: string
          description: Unique identifier for responsys
          example: ABR
        stationWikipediaUrl:
          $ref: "#/components/schemas/PageUrl"
        amazonAlexaSkillUrl:
          type: object
          allOf:
            - $ref: "#/components/schemas/PageUrl"
            - type: string
              description:
                "A link to the Amazon Alexa skill page, so the user can set\
                \ it up"
              example: https://www.amazon.co.uk/Bauer-Media-CFM/dp/B07B4DPT53/
        applePodSkillUrl:
          type: object
          allOf:
            - $ref: "#/components/schemas/PageUrl"
            - type: object
              description: "A link to the Apple skill page, so the user can set it up"
        googleHomeSkillUrl:
          type: object
          allOf:
            - $ref: "#/components/schemas/PageUrl"
            - type: object
              description:
                "A link to the Google skill page, so the user can set it\
                \ up"
        sonosIsEnabled:
          $ref: "#/components/schemas/NumericBoolean"
        chromecastIsEnabled:
          $ref: "#/components/schemas/NumericBoolean"
        tvGamingWaysToListenIsEnabled:
          $ref: "#/components/schemas/NumericBoolean"
        xboxAppStoreUrl:
          type: object
          allOf:
            - $ref: "#/components/schemas/PageUrl"
            - type: object
              description: "A link to the XBox skill page, so the user can set it up"
        psAppStoreUrl:
          type: object
          allOf:
            - $ref: "#/components/schemas/PageUrl"
            - type: object
              description: "A link to the Sony skill page, so the user can set it up"
        appleTvEnabled:
          $ref: "#/components/schemas/NumericBoolean"
        carWaysToListenIsEnabled:
          $ref: "#/components/schemas/NumericBoolean"
        carPlayIsEnabled:
          $ref: "#/components/schemas/NumericBoolean"
        androidAutoEnabled:
          $ref: "#/components/schemas/NumericBoolean"
        carModeEnabled:
          $ref: "#/components/schemas/NumericBoolean"
        wearablesWaysToListenIsEnabled:
          $ref: "#/components/schemas/NumericBoolean"
        appleWatchEnabled:
          $ref: "#/components/schemas/NumericBoolean"
        androidWatchEnabled:
          $ref: "#/components/schemas/NumericBoolean"
        stationTiktok:
          type: string
          description: Username for Station's TikTok
        stationGenreTags:
          type: array
          items:
            type: string
        positioningStatementTitle:
          type: string
        positioningStatementDescription:
          type: string
        teslaNavItemFirstStationName:
          $ref: "#/components/schemas/StationName"
        teslaNavItemFirstStationUrl:
          type: string
          format: uri
        teslaNavItemSecondStationName:
          $ref: "#/components/schemas/StationName"
        teslaNavItemSecondStationUrl:
          type: string
          description: Can be one of either a string or a URL
          nullable: true
          example: ""
        isContactManagerEnabled:
          $ref: "#/components/schemas/NumericBoolean"
        isCashRegisterEnabled:
          $ref: "#/components/schemas/NumericBoolean"
        cashRegisterHomepageHeroImageDesktop:
          $ref: "#/components/schemas/ImageUrl"
        cashRegisterHomepageHeroImageMobile:
          $ref: "#/components/schemas/ImageUrl"
        promotionalCashRegisterBannerDesktop:
          $ref: "#/components/schemas/ImageUrl"
        promotionalCashRegisterBannerMobile:
          $ref: "#/components/schemas/ImageUrl"
        vanityUrl:
          $ref: "#/components/schemas/PageUrl"
        nielsenGroupId:
          type: integer
        alternativeStationNames:
          type: string
        showInAlexaFeed:
          $ref: "#/components/schemas/NumericBoolean"
        constituentCountry:
          type: string
          example: NIR
        hlsStreamEnabled:
          $ref: "#/components/schemas/NumericBoolean"
        hlsInteractiveStream:
          $ref: "#/components/schemas/NumericBoolean"
        hlsPlayFromShowStart:
          $ref: "#/components/schemas/NumericBoolean"
        hlsPlayFromSongStart:
          $ref: "#/components/schemas/NumericBoolean"
        hlsSuperBuffer:
          type: integer
        copyrightTextOverride:
          type: string
        enableTrackReactions:
          $ref: "#/components/schemas/NumericBoolean"
        formerStationName:
          $ref: "#/components/schemas/StationName"
        stationLqHLSUrl:
          type: object
          allOf:
            - $ref: "#/components/schemas/StreamUrl"
            - type: string
              description: Low quality HLS Stream URL
              example: https://hls.absoluteradio.co.uk/absolute80shigh.aac/playlist.m3u8
        stationHqHLSUrl:
          type: object
          allOf:
            - $ref: "#/components/schemas/StreamUrl"
            - type: string
              description: Low quality HLS Stream URL
              example: https://hls.absoluteradio.co.uk/absolute80s.aac/playlist.m3u8
        amazonAlexaGenres:
          type: array
          description: A list of Alexa-recognised genres
          items:
            type: string
        skipTracksEnabled:
          $ref: "#/components/schemas/NumericBoolean"
        premiumEnabled:
          $ref: "#/components/schemas/NumericBoolean"
        subRegionSlug:
          $ref: "#/components/schemas/RegionCode"
        stationScheduleURL:
          type: string
        premiumOnlyStation:
          $ref: "#/components/schemas/NumericBoolean"
        rcsSkipEnabled:
          $ref: "#/components/schemas/NumericBoolean"
        hlsDvrSkipEnabled:
          $ref: "#/components/schemas/NumericBoolean"
        welcomeMessageAudioUrl:
          $ref: "#/components/schemas/StreamUrl"
        premiumOnlyAudioMessage:
          $ref: "#/components/schemas/StreamUrl"
        stationAreaServed:
          type: string
        stationAdvertiseUrl:
          $ref: "#/components/schemas/PageUrl"
        stationSubregion:
          $ref: "#/components/schemas/RegionCode"
        webDfpAdPath:
          $ref: "#/components/schemas/DfpAdPath"
      description: Station attributes that are optional in the response
    Station:
      allOf:
        - $ref: "#/components/schemas/StationBase"
        - $ref: "#/components/schemas/StationWithChildren"
        - $ref: "#/components/schemas/StationAttributes"
        - type: object
          description: "A full station object, that may contain children"
    ChildStation:
      allOf:
        - $ref: "#/components/schemas/StationBase"
        - $ref: "#/components/schemas/StationWithoutChildren"
        - $ref: "#/components/schemas/StationAttributes"
        - type: object
          description: "A child station, that does not contain children (to limit recursion)"
    StationNowPlaying:
      type: object
      properties:
        stationCode:
          type: string
        stationNowPlaying:
          $ref: "#/components/schemas/NowPlayingSimple"
        stationOnAir:
          $ref: "#/components/schemas/StationOnAir"
    StationUtterance:
      required:
        - stationCode
        - stationName
        - utterances
      type: object
      properties:
        stationName:
          type: object
          allOf:
            - $ref: "#/components/schemas/StationName"
            - type: object
              description: The name of station that the utterances belong to
        stationCode:
          type: object
          allOf:
            - $ref: "#/components/schemas/StationCode"
            - type: object
              description:
                The StationCode of the station that the utterances belong
                to
        utterances:
          $ref: "#/components/schemas/UtteranceGroup"
    UtteranceGroup:
      type: object
      properties:
        alexa:
          $ref: "#/components/schemas/DeviceUtteranceLocales"
        apple:
          $ref: "#/components/schemas/DeviceUtteranceLocales"
        google:
          $ref: "#/components/schemas/DeviceUtteranceLocales"
      description: "A map of utterances, grouped by device-type then locale"
    DeviceUtteranceLocales:
      type: object
      properties:
        en:
          type: array
          description: English locales
          items:
            type: string
            description: Utterance used to invoke device
            example: Alexa play Hits Radio
        pt:
          type: array
          description: Portuguese locales
          items:
            type: string
            description: Utterance used to invoke device
            example: Alexa toca Hits Radio
    BrandRelatedStation:
      allOf:
        - $ref: "#/components/schemas/StationBase"
    RelatedStation:
      allOf:
        - $ref: "#/components/schemas/StationBase"
    SplitStation:
      allOf:
        - $ref: "#/components/schemas/StationBase"
    StationsByPort:
      type: object
      properties:
        PORT:
          type: string
      additionalProperties: true
    Ticket:
      type: object
      properties:
        title:
          type: string
        shortdesc:
          type: string
        image_url:
          $ref: "#/components/schemas/ImageUrl"
        image_square_url:
          $ref: "#/components/schemas/ImageUrl"
        image_alt:
          type: string
        expiry:
          pattern: "^\\d{4}-\\d{2}-\\d{2}\\s\\d{2}:\\d{2}:\\d{2}$"
          type: string
        url:
          $ref: "#/components/schemas/PageUrl"
    TokenStatus:
      type: object
      properties:
        success:
          type: boolean
          description: Just return when the request is successful.
        error:
          type: string
          description: Just return when the request fails.
    Travel:
      type: object
      properties:
        lat:
          type: number
        lon:
          type: number
        national:
          type: integer
        priority:
          type: integer
        locationName:
          type: string
        description:
          type: string
    UserPremiumStatus:
      required:
        - payment_source
        - state
        - trial_used
      type: object
      properties:
        state:
          type: string
        trial_used:
          type: string
        payment_source:
          type: string
        expired_at:
          type: string
    CurrentAndFutureEvents:
      type: object
      properties:
        current:
          $ref: "#/components/schemas/XmlEvent"
        future:
          $ref: "#/components/schemas/XmlEvent"
    XmlEvent:
      type: object
      properties:
        html:
          type: string
        fullscreen:
          type: string
    Broadcaster:
      type: object
      properties:
        "@type":
          type: string
        "@id":
          type: string
        name:
          type: string
        sameAs:
          type: string
    BroadcastFrequency:
      type: object
      properties:
        "@type":
          type: string
        broadcastFrequencyValue:
          type: string
        broadcastSignalModulation:
          type: string
    BroadcastArea:
      type: object
      properties:
        "@type":
          type: string
        name:
          type: string
    RegionFeedLogo:
      type: object
      properties:
        "@type":
          type: string
        height:
          type: string
        width:
          type: string
        contentUrl:
          type: string
          format: uri
    PotentialAction:
      type: object
      properties:
        "@type":
          type: string
        target:
          type: array
          items:
            $ref: "#/components/schemas/PotentialActionTarget"
        actionAccessibilityRequirement:
          $ref: "#/components/schemas/PotentialActionAccessibilityRequirement"
    PotentialActionTarget:
      type: object
      properties:
        "@type":
          type: string
        urlTemplate:
          type: string
          format: uri
        actionPlatform:
          type: array
          items:
            type: string
    PotentialActionAccessibilityRequirement:
      type: object
      properties:
        "@type":
          type: string
        category:
          type: string
        eligibleRegion:
          type: array
          items:
            $ref: "#/components/schemas/AccessibilityRegion"
    AccessibilityRegion:
      type: object
      properties:
        "@type":
          type: string
        name:
          type: string
    DadiSchedule:
      type: object
      properties:
        YYYY-MM-DD:
          type: array
          description: This object keys is returned as DATE in the "YYYY-MM-DD" format
          items:
            $ref: "#/components/schemas/DadiScheduleDate"
      additionalProperties: true
    DadiScheduleDate:
      $ref: "#/components/schemas/Schedule"
  responses:
    StationResponse:
      description: OK
      content:
        "*/*":
          schema:
            $ref: "#/components/schemas/Station"
    StationsResponse:
      description: OK
      content:
        "*/*":
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Station"
    Todo:
      description:
        Placeholder for likely-unused endpoints which are blocking apigw
        deployment
      content:
        "*/*":
          schema:
            type: object
  parameters:
    _filter:
      name: "_filter[]"
      in: query
      description:
        "Long-form version to filter data. Post-processes data, may conflict\
        \ with request-specific parameters"
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
    _o:
      name: _o
      in: query
      description:
        Order data by provided parameter. Prefix with an "-" to order inversely.
        Endpoint must support.
      schema:
        type: string
    _pp:
      name: _pp
      in: query
      description: "Pagination: Items per page"
      schema:
        type: number
    premium:
      name: premium
      in: query
      description: Include Premium content in results
      schema:
        type: integer
        default: 0
        enum:
          - 0
          - 1
    _p:
      name: _p
      in: query
      description: "Pagination: Page number"
      schema:
        type: number
    regionCode:
      name: regionCode
      in: path
      description: ISO-3166-2 Region code
      required: true
      schema:
        type: string
        enum:
          - GB
          - "NO"
          - DK
          - FI
          - SE
          - DE
          - GR
          - CY
          - RO
          - MD
          - PL
          - IE
    shepherdRegionCode:
      name: regionCode
      in: query
      description: ISO-3166-2 Region code
      schema:
        type: string
        enum:
          - GB
          - DK
          - "NO"
          - FI
          - SE
          - GR
          - RO
    appPlatform:
      name: appPlatform
      in: path
      description: Used by phone applications to identify their source type
      required: true
      schema:
        pattern: "^\\w{3}\\_\\w+$"
        type: string
    since:
      name: since
      in: query
      description:
        "Specific date to get results greater than or equal to. Examples\
        \ `2021-02-02 01:01:01`, `10 minutes ago`"
      schema:
        type: string
    udid:
      name: udid
      in: path
      description: Unique identifier for a Device
      required: true
      schema:
        type: string
    brandCode:
      name: brand_code
      in: query
      description: Filter by using the brand code
      schema:
        type: string
    x-forwarded-for:
      name: X-Forwarded-For
      in: header
      description:
        Required when using test parameter (Is it needed to be a valid
        IP address).
      schema:
        type: string
x-original-swagger-version: "2.0"
